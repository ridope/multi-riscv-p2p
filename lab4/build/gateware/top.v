// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : top.v
// Device     : 10M50DAF484C7G
// LiteX sha1 : 3fde2512
// Date       : 2022-03-15 18:44:59
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module top (
	output reg  serial_tx,
	input  wire serial_rx,
	output wire user_led0,
	output wire user_led1,
	output wire user_led2,
	output wire user_led3,
	output wire user_led4,
	output wire user_led5,
	output wire user_led6,
	output wire user_led7,
	output wire user_led8,
	input  wire user_sw0,
	input  wire user_sw1,
	input  wire user_sw2,
	input  wire user_sw3,
	input  wire user_sw4,
	input  wire user_sw5,
	input  wire user_sw6,
	input  wire user_sw7,
	input  wire user_sw8,
	input  wire user_btn0,
	output reg  acc_spi_mosi,
	input  wire acc_spi_miso,
	output reg  acc_spi_clk,
	output reg  acc_spi_cs_n,
	output wire [7:0] display_1,
	output wire [7:0] display_2,
	output wire [7:0] display_3,
	output wire [7:0] display_4,
	output wire [7:0] display_5,
	output wire [7:0] display_6,
	input  wire clk50
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

reg  __main___soc_rst = 1'd0;
wire __main___cpu_rst;
reg  [1:0] __main___reset_storage = 2'd0;
reg  __main___reset_re = 1'd0;
reg  [31:0] __main___scratch_storage = 32'd305419896;
reg  __main___scratch_re = 1'd0;
wire [31:0] __main___bus_errors_status;
wire __main___bus_errors_we;
reg  __main___bus_errors_re = 1'd0;
wire __main___bus_error;
reg  [31:0] __main___bus_errors = 32'd0;
wire __main___reset;
reg  [31:0] __main___interrupt = 32'd0;
wire [29:0] __main___ibus_adr;
wire [31:0] __main___ibus_dat_w;
wire [31:0] __main___ibus_dat_r;
wire [3:0] __main___ibus_sel;
wire __main___ibus_cyc;
wire __main___ibus_stb;
wire __main___ibus_ack;
wire __main___ibus_we;
wire [2:0] __main___ibus_cti;
wire [1:0] __main___ibus_bte;
wire __main___ibus_err;
wire [29:0] __main___dbus_adr;
wire [31:0] __main___dbus_dat_w;
wire [31:0] __main___dbus_dat_r;
wire [3:0] __main___dbus_sel;
wire __main___dbus_cyc;
wire __main___dbus_stb;
wire __main___dbus_ack;
wire __main___dbus_we;
wire [2:0] __main___dbus_cti;
wire [1:0] __main___dbus_bte;
wire __main___dbus_err;
reg  [31:0] __main___vexriscv = 32'd0;
wire [29:0] __main___ram_bus_adr;
wire [31:0] __main___ram_bus_dat_w;
wire [31:0] __main___ram_bus_dat_r;
wire [3:0] __main___ram_bus_sel;
wire __main___ram_bus_cyc;
wire __main___ram_bus_stb;
reg  __main___ram_bus_ack = 1'd0;
wire __main___ram_bus_we;
wire [2:0] __main___ram_bus_cti;
wire [1:0] __main___ram_bus_bte;
reg  __main___ram_bus_err = 1'd0;
wire [12:0] __main___adr;
wire [31:0] __main___dat_r;
wire [29:0] __main___interface0_ram_bus_adr;
wire [31:0] __main___interface0_ram_bus_dat_w;
wire [31:0] __main___interface0_ram_bus_dat_r;
wire [3:0] __main___interface0_ram_bus_sel;
wire __main___interface0_ram_bus_cyc;
wire __main___interface0_ram_bus_stb;
reg  __main___interface0_ram_bus_ack = 1'd0;
wire __main___interface0_ram_bus_we;
wire [2:0] __main___interface0_ram_bus_cti;
wire [1:0] __main___interface0_ram_bus_bte;
reg  __main___interface0_ram_bus_err = 1'd0;
wire [10:0] __main___sram0_adr;
wire [31:0] __main___sram0_dat_r;
reg  [3:0] __main___sram0_we = 4'd0;
wire [31:0] __main___sram0_dat_w;
wire [29:0] __main___interface1_ram_bus_adr;
wire [31:0] __main___interface1_ram_bus_dat_w;
wire [31:0] __main___interface1_ram_bus_dat_r;
wire [3:0] __main___interface1_ram_bus_sel;
wire __main___interface1_ram_bus_cyc;
wire __main___interface1_ram_bus_stb;
reg  __main___interface1_ram_bus_ack = 1'd0;
wire __main___interface1_ram_bus_we;
wire [2:0] __main___interface1_ram_bus_cti;
wire [1:0] __main___interface1_ram_bus_bte;
reg  __main___interface1_ram_bus_err = 1'd0;
wire [11:0] __main___sram1_adr;
wire [31:0] __main___sram1_dat_r;
reg  [3:0] __main___sram1_we = 4'd0;
wire [31:0] __main___sram1_dat_w;
wire __main___tx_sink_valid;
reg  __main___tx_sink_ready = 1'd0;
wire __main___tx_sink_first;
wire __main___tx_sink_last;
wire [7:0] __main___tx_sink_payload_data;
reg  [7:0] __main___tx_data = 8'd0;
reg  [3:0] __main___tx_count = 4'd0;
reg  __main___tx_enable = 1'd0;
reg  __main___tx_tick = 1'd0;
reg  [31:0] __main___tx_phase = 32'd0;
reg  __main___rx_source_valid = 1'd0;
wire __main___rx_source_ready;
reg  __main___rx_source_first = 1'd0;
reg  __main___rx_source_last = 1'd0;
reg  [7:0] __main___rx_source_payload_data = 8'd0;
reg  [7:0] __main___rx_data = 8'd0;
reg  [3:0] __main___rx_count = 4'd0;
reg  __main___rx_enable = 1'd0;
reg  __main___rx_tick = 1'd0;
reg  [31:0] __main___rx_phase = 32'd0;
wire __main___rx_rx;
reg  __main___rx_rx_d = 1'd0;
reg  __main___uart_rxtx_re = 1'd0;
wire [7:0] __main___uart_rxtx_r;
reg  __main___uart_rxtx_we = 1'd0;
wire [7:0] __main___uart_rxtx_w;
wire __main___uart_txfull_status;
wire __main___uart_txfull_we;
reg  __main___uart_txfull_re = 1'd0;
wire __main___uart_rxempty_status;
wire __main___uart_rxempty_we;
reg  __main___uart_rxempty_re = 1'd0;
wire __main___uart_irq;
wire __main___uart_tx_status;
reg  __main___uart_tx_pending = 1'd0;
wire __main___uart_tx_trigger;
reg  __main___uart_tx_clear = 1'd0;
reg  __main___uart_tx_trigger_d = 1'd0;
wire __main___uart_rx_status;
reg  __main___uart_rx_pending = 1'd0;
wire __main___uart_rx_trigger;
reg  __main___uart_rx_clear = 1'd0;
reg  __main___uart_rx_trigger_d = 1'd0;
wire __main___uart_tx0;
wire __main___uart_rx0;
reg  [1:0] __main___uart_status_status = 2'd0;
wire __main___uart_status_we;
reg  __main___uart_status_re = 1'd0;
wire __main___uart_tx1;
wire __main___uart_rx1;
reg  [1:0] __main___uart_pending_status = 2'd0;
wire __main___uart_pending_we;
reg  __main___uart_pending_re = 1'd0;
reg  [1:0] __main___uart_pending_r = 2'd0;
wire __main___uart_tx2;
wire __main___uart_rx2;
reg  [1:0] __main___uart_enable_storage = 2'd0;
reg  __main___uart_enable_re = 1'd0;
wire __main___uart_txempty_status;
wire __main___uart_txempty_we;
reg  __main___uart_txempty_re = 1'd0;
wire __main___uart_rxfull_status;
wire __main___uart_rxfull_we;
reg  __main___uart_rxfull_re = 1'd0;
wire __main___uart_uart_sink_valid;
wire __main___uart_uart_sink_ready;
wire __main___uart_uart_sink_first;
wire __main___uart_uart_sink_last;
wire [7:0] __main___uart_uart_sink_payload_data;
wire __main___uart_uart_source_valid;
wire __main___uart_uart_source_ready;
wire __main___uart_uart_source_first;
wire __main___uart_uart_source_last;
wire [7:0] __main___uart_uart_source_payload_data;
wire __main___uart_tx_fifo_sink_valid;
wire __main___uart_tx_fifo_sink_ready;
reg  __main___uart_tx_fifo_sink_first = 1'd0;
reg  __main___uart_tx_fifo_sink_last = 1'd0;
wire [7:0] __main___uart_tx_fifo_sink_payload_data;
wire __main___uart_tx_fifo_source_valid;
wire __main___uart_tx_fifo_source_ready;
wire __main___uart_tx_fifo_source_first;
wire __main___uart_tx_fifo_source_last;
wire [7:0] __main___uart_tx_fifo_source_payload_data;
wire __main___uart_tx_fifo_re;
reg  __main___uart_tx_fifo_readable = 1'd0;
wire __main___uart_tx_fifo_syncfifo_we;
wire __main___uart_tx_fifo_syncfifo_writable;
wire __main___uart_tx_fifo_syncfifo_re;
wire __main___uart_tx_fifo_syncfifo_readable;
wire [9:0] __main___uart_tx_fifo_syncfifo_din;
wire [9:0] __main___uart_tx_fifo_syncfifo_dout;
reg  [4:0] __main___uart_tx_fifo_level0 = 5'd0;
reg  __main___uart_tx_fifo_replace = 1'd0;
reg  [3:0] __main___uart_tx_fifo_produce = 4'd0;
reg  [3:0] __main___uart_tx_fifo_consume = 4'd0;
reg  [3:0] __main___uart_tx_fifo_wrport_adr = 4'd0;
wire [9:0] __main___uart_tx_fifo_wrport_dat_r;
wire __main___uart_tx_fifo_wrport_we;
wire [9:0] __main___uart_tx_fifo_wrport_dat_w;
wire __main___uart_tx_fifo_do_read;
wire [3:0] __main___uart_tx_fifo_rdport_adr;
wire [9:0] __main___uart_tx_fifo_rdport_dat_r;
wire __main___uart_tx_fifo_rdport_re;
wire [4:0] __main___uart_tx_fifo_level1;
wire [7:0] __main___uart_tx_fifo_fifo_in_payload_data;
wire __main___uart_tx_fifo_fifo_in_first;
wire __main___uart_tx_fifo_fifo_in_last;
wire [7:0] __main___uart_tx_fifo_fifo_out_payload_data;
wire __main___uart_tx_fifo_fifo_out_first;
wire __main___uart_tx_fifo_fifo_out_last;
wire __main___uart_rx_fifo_sink_valid;
wire __main___uart_rx_fifo_sink_ready;
wire __main___uart_rx_fifo_sink_first;
wire __main___uart_rx_fifo_sink_last;
wire [7:0] __main___uart_rx_fifo_sink_payload_data;
wire __main___uart_rx_fifo_source_valid;
wire __main___uart_rx_fifo_source_ready;
wire __main___uart_rx_fifo_source_first;
wire __main___uart_rx_fifo_source_last;
wire [7:0] __main___uart_rx_fifo_source_payload_data;
wire __main___uart_rx_fifo_re;
reg  __main___uart_rx_fifo_readable = 1'd0;
wire __main___uart_rx_fifo_syncfifo_we;
wire __main___uart_rx_fifo_syncfifo_writable;
wire __main___uart_rx_fifo_syncfifo_re;
wire __main___uart_rx_fifo_syncfifo_readable;
wire [9:0] __main___uart_rx_fifo_syncfifo_din;
wire [9:0] __main___uart_rx_fifo_syncfifo_dout;
reg  [4:0] __main___uart_rx_fifo_level0 = 5'd0;
reg  __main___uart_rx_fifo_replace = 1'd0;
reg  [3:0] __main___uart_rx_fifo_produce = 4'd0;
reg  [3:0] __main___uart_rx_fifo_consume = 4'd0;
reg  [3:0] __main___uart_rx_fifo_wrport_adr = 4'd0;
wire [9:0] __main___uart_rx_fifo_wrport_dat_r;
wire __main___uart_rx_fifo_wrport_we;
wire [9:0] __main___uart_rx_fifo_wrport_dat_w;
wire __main___uart_rx_fifo_do_read;
wire [3:0] __main___uart_rx_fifo_rdport_adr;
wire [9:0] __main___uart_rx_fifo_rdport_dat_r;
wire __main___uart_rx_fifo_rdport_re;
wire [4:0] __main___uart_rx_fifo_level1;
wire [7:0] __main___uart_rx_fifo_fifo_in_payload_data;
wire __main___uart_rx_fifo_fifo_in_first;
wire __main___uart_rx_fifo_fifo_in_last;
wire [7:0] __main___uart_rx_fifo_fifo_out_payload_data;
wire __main___uart_rx_fifo_fifo_out_first;
wire __main___uart_rx_fifo_fifo_out_last;
reg  [31:0] __main___timer_load_storage = 32'd0;
reg  __main___timer_load_re = 1'd0;
reg  [31:0] __main___timer_reload_storage = 32'd0;
reg  __main___timer_reload_re = 1'd0;
reg  __main___timer_en_storage = 1'd0;
reg  __main___timer_en_re = 1'd0;
reg  __main___timer_update_value_storage = 1'd0;
reg  __main___timer_update_value_re = 1'd0;
reg  [31:0] __main___timer_value_status = 32'd0;
wire __main___timer_value_we;
reg  __main___timer_value_re = 1'd0;
wire __main___timer_irq;
wire __main___timer_zero_status;
reg  __main___timer_zero_pending = 1'd0;
wire __main___timer_zero_trigger;
reg  __main___timer_zero_clear = 1'd0;
reg  __main___timer_zero_trigger_d = 1'd0;
wire __main___timer_zero0;
wire __main___timer_status_status;
wire __main___timer_status_we;
reg  __main___timer_status_re = 1'd0;
wire __main___timer_zero1;
wire __main___timer_pending_status;
wire __main___timer_pending_we;
reg  __main___timer_pending_re = 1'd0;
reg  __main___timer_pending_r = 1'd0;
wire __main___timer_zero2;
reg  __main___timer_enable_storage = 1'd0;
reg  __main___timer_enable_re = 1'd0;
reg  [31:0] __main___timer_value = 32'd0;
reg  [8:0] __main___leds_storage = 9'd0;
reg  __main___leds_re = 1'd0;
wire [8:0] __main___switches_status;
wire __main___switches_we;
reg  __main___switches_re = 1'd0;
wire __main___buttons_status;
wire __main___buttons_we;
reg  __main___buttons_re = 1'd0;
wire __main___start0;
wire [7:0] __main___length0;
reg  __main___done0 = 1'd0;
reg  __main___irq = 1'd0;
wire [15:0] __main___mosi;
reg  [15:0] __main___miso = 16'd0;
wire __main___cs;
wire __main___cs_mode;
wire __main___loopback;
reg  [15:0] __main___clk_divider0 = 16'd50;
reg  __main___start1 = 1'd0;
wire [7:0] __main___length1;
reg  [15:0] __main___control_storage = 16'd0;
reg  __main___control_re = 1'd0;
wire __main___done1;
wire __main___status_status;
wire __main___status_we;
reg  __main___status_re = 1'd0;
reg  [15:0] __main___mosi_storage = 16'd0;
reg  __main___mosi_re = 1'd0;
wire [15:0] __main___miso_status;
wire __main___miso_we;
reg  __main___miso_re = 1'd0;
wire __main___sel;
wire __main___mode0;
reg  [16:0] __main___cs_storage = 17'd1;
reg  __main___cs_re = 1'd0;
wire __main___mode1;
reg  __main___loopback_storage = 1'd0;
reg  __main___loopback_re = 1'd0;
reg  __main___clk_enable = 1'd0;
reg  __main___xfer_enable = 1'd0;
reg  [3:0] __main___count = 4'd0;
reg  __main___mosi_latch = 1'd0;
reg  __main___miso_latch = 1'd0;
reg  [15:0] __main___clk_divider1 = 16'd0;
wire __main___clk_rise;
wire __main___clk_fall;
reg  [15:0] __main___mosi_data = 16'd0;
reg  [3:0] __main___mosi_sel = 4'd0;
reg  [15:0] __main___miso_data = 16'd0;
reg  [3:0] __main___display1_storage = 4'd0;
reg  __main___display1_re = 1'd0;
reg  __main___display1_write_re = 1'd0;
wire __main___display1_write_r;
reg  __main___display1_write_we = 1'd0;
reg  __main___display1_write_w = 1'd0;
wire [6:0] __main___display1_abcdefg0;
reg  [3:0] __main___display1_value = 4'd0;
reg  [6:0] __main___display1_abcdefg1 = 7'd0;
reg  [3:0] __main___display2_storage = 4'd0;
reg  __main___display2_re = 1'd0;
reg  __main___display2_write_re = 1'd0;
wire __main___display2_write_r;
reg  __main___display2_write_we = 1'd0;
reg  __main___display2_write_w = 1'd0;
wire [6:0] __main___display2_abcdefg0;
reg  [3:0] __main___display2_value = 4'd0;
reg  [6:0] __main___display2_abcdefg1 = 7'd0;
reg  [3:0] __main___display3_storage = 4'd0;
reg  __main___display3_re = 1'd0;
reg  __main___display3_write_re = 1'd0;
wire __main___display3_write_r;
reg  __main___display3_write_we = 1'd0;
reg  __main___display3_write_w = 1'd0;
wire [6:0] __main___display3_abcdefg0;
reg  [3:0] __main___display3_value = 4'd0;
reg  [6:0] __main___display3_abcdefg1 = 7'd0;
reg  [3:0] __main___display4_storage = 4'd0;
reg  __main___display4_re = 1'd0;
reg  __main___display4_write_re = 1'd0;
wire __main___display4_write_r;
reg  __main___display4_write_we = 1'd0;
reg  __main___display4_write_w = 1'd0;
wire [6:0] __main___display4_abcdefg0;
reg  [3:0] __main___display4_value = 4'd0;
reg  [6:0] __main___display4_abcdefg1 = 7'd0;
reg  [3:0] __main___display5_storage = 4'd0;
reg  __main___display5_re = 1'd0;
reg  __main___display5_write_re = 1'd0;
wire __main___display5_write_r;
reg  __main___display5_write_we = 1'd0;
reg  __main___display5_write_w = 1'd0;
wire [6:0] __main___display5_abcdefg0;
reg  [3:0] __main___display5_value = 4'd0;
reg  [6:0] __main___display5_abcdefg1 = 7'd0;
reg  [3:0] __main___display6_storage = 4'd0;
reg  __main___display6_re = 1'd0;
reg  __main___display6_write_re = 1'd0;
wire __main___display6_write_r;
reg  __main___display6_write_we = 1'd0;
reg  __main___display6_write_w = 1'd0;
wire [6:0] __main___display6_abcdefg0;
reg  [3:0] __main___display6_value = 4'd0;
reg  [6:0] __main___display6_abcdefg1 = 7'd0;
reg  builder_subfragments_rs232phytx_state = 1'd0;
reg  builder_subfragments_rs232phytx_next_state = 1'd0;
reg  [3:0] __main___tx_count_rs232phytx_next_value0 = 4'd0;
reg  __main___tx_count_rs232phytx_next_value_ce0 = 1'd0;
reg  __main___serial_tx_rs232phytx_next_value1 = 1'd0;
reg  __main___serial_tx_rs232phytx_next_value_ce1 = 1'd0;
reg  [7:0] __main___tx_data_rs232phytx_next_value2 = 8'd0;
reg  __main___tx_data_rs232phytx_next_value_ce2 = 1'd0;
reg  builder_subfragments_rs232phyrx_state = 1'd0;
reg  builder_subfragments_rs232phyrx_next_state = 1'd0;
reg  [3:0] __main___rx_count_rs232phyrx_next_value0 = 4'd0;
reg  __main___rx_count_rs232phyrx_next_value_ce0 = 1'd0;
reg  [7:0] __main___rx_data_rs232phyrx_next_value1 = 8'd0;
reg  __main___rx_data_rs232phyrx_next_value_ce1 = 1'd0;
reg  [1:0] builder_subfragments_state = 2'd0;
reg  [1:0] builder_subfragments_next_state = 2'd0;
reg  [3:0] __main___count_next_value = 4'd0;
reg  __main___count_next_value_ce = 1'd0;
reg  [13:0] builder_basesoc_basesoc_adr = 14'd0;
reg  builder_basesoc_basesoc_we = 1'd0;
reg  [31:0] builder_basesoc_basesoc_dat_w = 32'd0;
wire [31:0] builder_basesoc_basesoc_dat_r;
wire [29:0] builder_basesoc_basesoc_wishbone_adr;
wire [31:0] builder_basesoc_basesoc_wishbone_dat_w;
reg  [31:0] builder_basesoc_basesoc_wishbone_dat_r = 32'd0;
wire [3:0] builder_basesoc_basesoc_wishbone_sel;
wire builder_basesoc_basesoc_wishbone_cyc;
wire builder_basesoc_basesoc_wishbone_stb;
reg  builder_basesoc_basesoc_wishbone_ack = 1'd0;
wire builder_basesoc_basesoc_wishbone_we;
wire [2:0] builder_basesoc_basesoc_wishbone_cti;
wire [1:0] builder_basesoc_basesoc_wishbone_bte;
reg  builder_basesoc_basesoc_wishbone_err = 1'd0;
wire [29:0] builder_basesoc_shared_adr;
wire [31:0] builder_basesoc_shared_dat_w;
reg  [31:0] builder_basesoc_shared_dat_r = 32'd0;
wire [3:0] builder_basesoc_shared_sel;
wire builder_basesoc_shared_cyc;
wire builder_basesoc_shared_stb;
reg  builder_basesoc_shared_ack = 1'd0;
wire builder_basesoc_shared_we;
wire [2:0] builder_basesoc_shared_cti;
wire [1:0] builder_basesoc_shared_bte;
wire builder_basesoc_shared_err;
wire [1:0] builder_basesoc_request;
reg  builder_basesoc_grant = 1'd0;
reg  [3:0] builder_basesoc_slave_sel = 4'd0;
reg  [3:0] builder_basesoc_slave_sel_r = 4'd0;
reg  builder_basesoc_error = 1'd0;
wire builder_basesoc_wait;
wire builder_basesoc_done;
reg  [19:0] builder_basesoc_count = 20'd1000000;
wire [13:0] builder_basesoc_csr_bankarray_interface0_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface0_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface0_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface0_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank0_control0_re = 1'd0;
wire [15:0] builder_basesoc_csr_bankarray_csrbank0_control0_r;
reg  builder_basesoc_csr_bankarray_csrbank0_control0_we = 1'd0;
wire [15:0] builder_basesoc_csr_bankarray_csrbank0_control0_w;
reg  builder_basesoc_csr_bankarray_csrbank0_status_re = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank0_status_r;
reg  builder_basesoc_csr_bankarray_csrbank0_status_we = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank0_status_w;
reg  builder_basesoc_csr_bankarray_csrbank0_mosi0_re = 1'd0;
wire [15:0] builder_basesoc_csr_bankarray_csrbank0_mosi0_r;
reg  builder_basesoc_csr_bankarray_csrbank0_mosi0_we = 1'd0;
wire [15:0] builder_basesoc_csr_bankarray_csrbank0_mosi0_w;
reg  builder_basesoc_csr_bankarray_csrbank0_miso_re = 1'd0;
wire [15:0] builder_basesoc_csr_bankarray_csrbank0_miso_r;
reg  builder_basesoc_csr_bankarray_csrbank0_miso_we = 1'd0;
wire [15:0] builder_basesoc_csr_bankarray_csrbank0_miso_w;
reg  builder_basesoc_csr_bankarray_csrbank0_cs0_re = 1'd0;
wire [16:0] builder_basesoc_csr_bankarray_csrbank0_cs0_r;
reg  builder_basesoc_csr_bankarray_csrbank0_cs0_we = 1'd0;
wire [16:0] builder_basesoc_csr_bankarray_csrbank0_cs0_w;
reg  builder_basesoc_csr_bankarray_csrbank0_loopback0_re = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank0_loopback0_r;
reg  builder_basesoc_csr_bankarray_csrbank0_loopback0_we = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank0_loopback0_w;
wire builder_basesoc_csr_bankarray_csrbank0_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface1_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface1_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface1_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface1_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank1_in_re = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank1_in_r;
reg  builder_basesoc_csr_bankarray_csrbank1_in_we = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank1_in_w;
wire builder_basesoc_csr_bankarray_csrbank1_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface2_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface2_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface2_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface2_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank2_reset0_re = 1'd0;
wire [1:0] builder_basesoc_csr_bankarray_csrbank2_reset0_r;
reg  builder_basesoc_csr_bankarray_csrbank2_reset0_we = 1'd0;
wire [1:0] builder_basesoc_csr_bankarray_csrbank2_reset0_w;
reg  builder_basesoc_csr_bankarray_csrbank2_scratch0_re = 1'd0;
wire [31:0] builder_basesoc_csr_bankarray_csrbank2_scratch0_r;
reg  builder_basesoc_csr_bankarray_csrbank2_scratch0_we = 1'd0;
wire [31:0] builder_basesoc_csr_bankarray_csrbank2_scratch0_w;
reg  builder_basesoc_csr_bankarray_csrbank2_bus_errors_re = 1'd0;
wire [31:0] builder_basesoc_csr_bankarray_csrbank2_bus_errors_r;
reg  builder_basesoc_csr_bankarray_csrbank2_bus_errors_we = 1'd0;
wire [31:0] builder_basesoc_csr_bankarray_csrbank2_bus_errors_w;
wire builder_basesoc_csr_bankarray_csrbank2_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface3_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface3_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface3_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface3_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank3_value0_re = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank3_value0_r;
reg  builder_basesoc_csr_bankarray_csrbank3_value0_we = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank3_value0_w;
wire builder_basesoc_csr_bankarray_csrbank3_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface4_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface4_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface4_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface4_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank4_value0_re = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank4_value0_r;
reg  builder_basesoc_csr_bankarray_csrbank4_value0_we = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank4_value0_w;
wire builder_basesoc_csr_bankarray_csrbank4_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface5_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface5_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface5_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface5_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank5_value0_re = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank5_value0_r;
reg  builder_basesoc_csr_bankarray_csrbank5_value0_we = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank5_value0_w;
wire builder_basesoc_csr_bankarray_csrbank5_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface6_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface6_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface6_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface6_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank6_value0_re = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank6_value0_r;
reg  builder_basesoc_csr_bankarray_csrbank6_value0_we = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank6_value0_w;
wire builder_basesoc_csr_bankarray_csrbank6_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface7_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface7_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface7_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface7_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank7_value0_re = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank7_value0_r;
reg  builder_basesoc_csr_bankarray_csrbank7_value0_we = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank7_value0_w;
wire builder_basesoc_csr_bankarray_csrbank7_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface8_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface8_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface8_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface8_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank8_value0_re = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank8_value0_r;
reg  builder_basesoc_csr_bankarray_csrbank8_value0_we = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank8_value0_w;
wire builder_basesoc_csr_bankarray_csrbank8_sel;
wire [13:0] builder_basesoc_csr_bankarray_sram_bus_adr;
wire builder_basesoc_csr_bankarray_sram_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_sram_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_sram_bus_dat_r = 32'd0;
wire [5:0] builder_basesoc_csr_bankarray_adr;
wire [7:0] builder_basesoc_csr_bankarray_dat_r;
wire builder_basesoc_csr_bankarray_sel;
reg  builder_basesoc_csr_bankarray_sel_r = 1'd0;
wire [13:0] builder_basesoc_csr_bankarray_interface9_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface9_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface9_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface9_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank9_out0_re = 1'd0;
wire [8:0] builder_basesoc_csr_bankarray_csrbank9_out0_r;
reg  builder_basesoc_csr_bankarray_csrbank9_out0_we = 1'd0;
wire [8:0] builder_basesoc_csr_bankarray_csrbank9_out0_w;
wire builder_basesoc_csr_bankarray_csrbank9_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface10_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface10_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface10_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface10_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank10_in_re = 1'd0;
wire [8:0] builder_basesoc_csr_bankarray_csrbank10_in_r;
reg  builder_basesoc_csr_bankarray_csrbank10_in_we = 1'd0;
wire [8:0] builder_basesoc_csr_bankarray_csrbank10_in_w;
wire builder_basesoc_csr_bankarray_csrbank10_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface11_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface11_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface11_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface11_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank11_load0_re = 1'd0;
wire [31:0] builder_basesoc_csr_bankarray_csrbank11_load0_r;
reg  builder_basesoc_csr_bankarray_csrbank11_load0_we = 1'd0;
wire [31:0] builder_basesoc_csr_bankarray_csrbank11_load0_w;
reg  builder_basesoc_csr_bankarray_csrbank11_reload0_re = 1'd0;
wire [31:0] builder_basesoc_csr_bankarray_csrbank11_reload0_r;
reg  builder_basesoc_csr_bankarray_csrbank11_reload0_we = 1'd0;
wire [31:0] builder_basesoc_csr_bankarray_csrbank11_reload0_w;
reg  builder_basesoc_csr_bankarray_csrbank11_en0_re = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank11_en0_r;
reg  builder_basesoc_csr_bankarray_csrbank11_en0_we = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank11_en0_w;
reg  builder_basesoc_csr_bankarray_csrbank11_update_value0_re = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank11_update_value0_r;
reg  builder_basesoc_csr_bankarray_csrbank11_update_value0_we = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank11_update_value0_w;
reg  builder_basesoc_csr_bankarray_csrbank11_value_re = 1'd0;
wire [31:0] builder_basesoc_csr_bankarray_csrbank11_value_r;
reg  builder_basesoc_csr_bankarray_csrbank11_value_we = 1'd0;
wire [31:0] builder_basesoc_csr_bankarray_csrbank11_value_w;
reg  builder_basesoc_csr_bankarray_csrbank11_ev_status_re = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank11_ev_status_r;
reg  builder_basesoc_csr_bankarray_csrbank11_ev_status_we = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank11_ev_status_w;
reg  builder_basesoc_csr_bankarray_csrbank11_ev_pending_re = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank11_ev_pending_r;
reg  builder_basesoc_csr_bankarray_csrbank11_ev_pending_we = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank11_ev_pending_w;
reg  builder_basesoc_csr_bankarray_csrbank11_ev_enable0_re = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank11_ev_enable0_r;
reg  builder_basesoc_csr_bankarray_csrbank11_ev_enable0_we = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank11_ev_enable0_w;
wire builder_basesoc_csr_bankarray_csrbank11_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface12_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface12_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface12_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface12_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank12_txfull_re = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank12_txfull_r;
reg  builder_basesoc_csr_bankarray_csrbank12_txfull_we = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank12_txfull_w;
reg  builder_basesoc_csr_bankarray_csrbank12_rxempty_re = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank12_rxempty_r;
reg  builder_basesoc_csr_bankarray_csrbank12_rxempty_we = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank12_rxempty_w;
reg  builder_basesoc_csr_bankarray_csrbank12_ev_status_re = 1'd0;
wire [1:0] builder_basesoc_csr_bankarray_csrbank12_ev_status_r;
reg  builder_basesoc_csr_bankarray_csrbank12_ev_status_we = 1'd0;
wire [1:0] builder_basesoc_csr_bankarray_csrbank12_ev_status_w;
reg  builder_basesoc_csr_bankarray_csrbank12_ev_pending_re = 1'd0;
wire [1:0] builder_basesoc_csr_bankarray_csrbank12_ev_pending_r;
reg  builder_basesoc_csr_bankarray_csrbank12_ev_pending_we = 1'd0;
wire [1:0] builder_basesoc_csr_bankarray_csrbank12_ev_pending_w;
reg  builder_basesoc_csr_bankarray_csrbank12_ev_enable0_re = 1'd0;
wire [1:0] builder_basesoc_csr_bankarray_csrbank12_ev_enable0_r;
reg  builder_basesoc_csr_bankarray_csrbank12_ev_enable0_we = 1'd0;
wire [1:0] builder_basesoc_csr_bankarray_csrbank12_ev_enable0_w;
reg  builder_basesoc_csr_bankarray_csrbank12_txempty_re = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank12_txempty_r;
reg  builder_basesoc_csr_bankarray_csrbank12_txempty_we = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank12_txempty_w;
reg  builder_basesoc_csr_bankarray_csrbank12_rxfull_re = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank12_rxfull_r;
reg  builder_basesoc_csr_bankarray_csrbank12_rxfull_we = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank12_rxfull_w;
wire builder_basesoc_csr_bankarray_csrbank12_sel;
wire [13:0] builder_basesoc_csr_interconnect_adr;
wire builder_basesoc_csr_interconnect_we;
wire [31:0] builder_basesoc_csr_interconnect_dat_w;
wire [31:0] builder_basesoc_csr_interconnect_dat_r;
reg  builder_basesoc_state = 1'd0;
reg  builder_basesoc_next_state = 1'd0;
wire sys_clk;
wire sys_rst;
wire por_clk;
reg  builder_int_rst = 1'd1;
reg  [29:0] builder_comb_array_muxed0 = 30'd0;
reg  [31:0] builder_comb_array_muxed1 = 32'd0;
reg  [3:0] builder_comb_array_muxed2 = 4'd0;
reg  builder_comb_array_muxed3 = 1'd0;
reg  builder_comb_array_muxed4 = 1'd0;
reg  builder_comb_array_muxed5 = 1'd0;
reg  [2:0] builder_comb_array_muxed6 = 3'd0;
reg  [1:0] builder_comb_array_muxed7 = 2'd0;
reg  builder_sync_array_muxed = 1'd0;
reg  builder_multiregimpl0_regs0 = 1'd0;
reg  builder_multiregimpl0_regs1 = 1'd0;
reg  [8:0] builder_multiregimpl1_regs0 = 9'd0;
reg  [8:0] builder_multiregimpl1_regs1 = 9'd0;
reg  builder_multiregimpl2_regs0 = 1'd0;
reg  builder_multiregimpl2_regs1 = 1'd0;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign __main___reset = (__main___soc_rst | __main___cpu_rst);
assign display_1 = (~__main___display1_abcdefg0);
assign display_2 = (~__main___display2_abcdefg0);
assign display_3 = (~__main___display3_abcdefg0);
assign display_4 = (~__main___display4_abcdefg0);
assign display_5 = (~__main___display5_abcdefg0);
assign display_6 = (~__main___display6_abcdefg0);
assign __main___bus_error = builder_basesoc_error;
always @(*) begin
	__main___interrupt <= 32'd0;
	__main___interrupt[1] <= __main___timer_irq;
	__main___interrupt[0] <= __main___uart_irq;
end
assign __main___bus_errors_status = __main___bus_errors;
assign __main___adr = __main___ram_bus_adr[12:0];
assign __main___ram_bus_dat_r = __main___dat_r;
always @(*) begin
	__main___sram0_we <= 4'd0;
	__main___sram0_we[0] <= (((__main___interface0_ram_bus_cyc & __main___interface0_ram_bus_stb) & __main___interface0_ram_bus_we) & __main___interface0_ram_bus_sel[0]);
	__main___sram0_we[1] <= (((__main___interface0_ram_bus_cyc & __main___interface0_ram_bus_stb) & __main___interface0_ram_bus_we) & __main___interface0_ram_bus_sel[1]);
	__main___sram0_we[2] <= (((__main___interface0_ram_bus_cyc & __main___interface0_ram_bus_stb) & __main___interface0_ram_bus_we) & __main___interface0_ram_bus_sel[2]);
	__main___sram0_we[3] <= (((__main___interface0_ram_bus_cyc & __main___interface0_ram_bus_stb) & __main___interface0_ram_bus_we) & __main___interface0_ram_bus_sel[3]);
end
assign __main___sram0_adr = __main___interface0_ram_bus_adr[10:0];
assign __main___interface0_ram_bus_dat_r = __main___sram0_dat_r;
assign __main___sram0_dat_w = __main___interface0_ram_bus_dat_w;
always @(*) begin
	__main___sram1_we <= 4'd0;
	__main___sram1_we[0] <= (((__main___interface1_ram_bus_cyc & __main___interface1_ram_bus_stb) & __main___interface1_ram_bus_we) & __main___interface1_ram_bus_sel[0]);
	__main___sram1_we[1] <= (((__main___interface1_ram_bus_cyc & __main___interface1_ram_bus_stb) & __main___interface1_ram_bus_we) & __main___interface1_ram_bus_sel[1]);
	__main___sram1_we[2] <= (((__main___interface1_ram_bus_cyc & __main___interface1_ram_bus_stb) & __main___interface1_ram_bus_we) & __main___interface1_ram_bus_sel[2]);
	__main___sram1_we[3] <= (((__main___interface1_ram_bus_cyc & __main___interface1_ram_bus_stb) & __main___interface1_ram_bus_we) & __main___interface1_ram_bus_sel[3]);
end
assign __main___sram1_adr = __main___interface1_ram_bus_adr[11:0];
assign __main___interface1_ram_bus_dat_r = __main___sram1_dat_r;
assign __main___sram1_dat_w = __main___interface1_ram_bus_dat_w;
always @(*) begin
	__main___tx_sink_ready <= 1'd0;
	__main___serial_tx_rs232phytx_next_value1 <= 1'd0;
	__main___serial_tx_rs232phytx_next_value_ce1 <= 1'd0;
	__main___tx_data_rs232phytx_next_value2 <= 8'd0;
	__main___tx_data_rs232phytx_next_value_ce2 <= 1'd0;
	__main___tx_enable <= 1'd0;
	builder_subfragments_rs232phytx_next_state <= 1'd0;
	__main___tx_count_rs232phytx_next_value0 <= 4'd0;
	__main___tx_count_rs232phytx_next_value_ce0 <= 1'd0;
	builder_subfragments_rs232phytx_next_state <= builder_subfragments_rs232phytx_state;
	case (builder_subfragments_rs232phytx_state)
		1'd1: begin
			__main___tx_enable <= 1'd1;
			if (__main___tx_tick) begin
				__main___serial_tx_rs232phytx_next_value1 <= __main___tx_data;
				__main___serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
				__main___tx_count_rs232phytx_next_value0 <= (__main___tx_count + 1'd1);
				__main___tx_count_rs232phytx_next_value_ce0 <= 1'd1;
				__main___tx_data_rs232phytx_next_value2 <= {1'd1, __main___tx_data[7:1]};
				__main___tx_data_rs232phytx_next_value_ce2 <= 1'd1;
				if ((__main___tx_count == 4'd9)) begin
					__main___tx_sink_ready <= 1'd1;
					builder_subfragments_rs232phytx_next_state <= 1'd0;
				end
			end
		end
		default: begin
			__main___tx_count_rs232phytx_next_value0 <= 1'd0;
			__main___tx_count_rs232phytx_next_value_ce0 <= 1'd1;
			__main___serial_tx_rs232phytx_next_value1 <= 1'd1;
			__main___serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
			if (__main___tx_sink_valid) begin
				__main___serial_tx_rs232phytx_next_value1 <= 1'd0;
				__main___serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
				__main___tx_data_rs232phytx_next_value2 <= __main___tx_sink_payload_data;
				__main___tx_data_rs232phytx_next_value_ce2 <= 1'd1;
				builder_subfragments_rs232phytx_next_state <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	__main___rx_source_valid <= 1'd0;
	__main___rx_data_rs232phyrx_next_value1 <= 8'd0;
	__main___rx_source_payload_data <= 8'd0;
	__main___rx_data_rs232phyrx_next_value_ce1 <= 1'd0;
	__main___rx_enable <= 1'd0;
	builder_subfragments_rs232phyrx_next_state <= 1'd0;
	__main___rx_count_rs232phyrx_next_value0 <= 4'd0;
	__main___rx_count_rs232phyrx_next_value_ce0 <= 1'd0;
	builder_subfragments_rs232phyrx_next_state <= builder_subfragments_rs232phyrx_state;
	case (builder_subfragments_rs232phyrx_state)
		1'd1: begin
			__main___rx_enable <= 1'd1;
			if (__main___rx_tick) begin
				__main___rx_count_rs232phyrx_next_value0 <= (__main___rx_count + 1'd1);
				__main___rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
				__main___rx_data_rs232phyrx_next_value1 <= {__main___rx_rx, __main___rx_data[7:1]};
				__main___rx_data_rs232phyrx_next_value_ce1 <= 1'd1;
				if ((__main___rx_count == 4'd9)) begin
					__main___rx_source_valid <= (__main___rx_rx == 1'd1);
					__main___rx_source_payload_data <= __main___rx_data;
					builder_subfragments_rs232phyrx_next_state <= 1'd0;
				end
			end
		end
		default: begin
			__main___rx_count_rs232phyrx_next_value0 <= 1'd0;
			__main___rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
			if (((__main___rx_rx == 1'd0) & (__main___rx_rx_d == 1'd1))) begin
				builder_subfragments_rs232phyrx_next_state <= 1'd1;
			end
		end
	endcase
end
assign __main___uart_uart_sink_valid = __main___rx_source_valid;
assign __main___rx_source_ready = __main___uart_uart_sink_ready;
assign __main___uart_uart_sink_first = __main___rx_source_first;
assign __main___uart_uart_sink_last = __main___rx_source_last;
assign __main___uart_uart_sink_payload_data = __main___rx_source_payload_data;
assign __main___tx_sink_valid = __main___uart_uart_source_valid;
assign __main___uart_uart_source_ready = __main___tx_sink_ready;
assign __main___tx_sink_first = __main___uart_uart_source_first;
assign __main___tx_sink_last = __main___uart_uart_source_last;
assign __main___tx_sink_payload_data = __main___uart_uart_source_payload_data;
assign __main___uart_tx_fifo_sink_valid = __main___uart_rxtx_re;
assign __main___uart_tx_fifo_sink_payload_data = __main___uart_rxtx_r;
assign __main___uart_uart_source_valid = __main___uart_tx_fifo_source_valid;
assign __main___uart_tx_fifo_source_ready = __main___uart_uart_source_ready;
assign __main___uart_uart_source_first = __main___uart_tx_fifo_source_first;
assign __main___uart_uart_source_last = __main___uart_tx_fifo_source_last;
assign __main___uart_uart_source_payload_data = __main___uart_tx_fifo_source_payload_data;
assign __main___uart_txfull_status = (~__main___uart_tx_fifo_sink_ready);
assign __main___uart_txempty_status = (~__main___uart_tx_fifo_source_valid);
assign __main___uart_tx_trigger = __main___uart_tx_fifo_sink_ready;
assign __main___uart_rx_fifo_sink_valid = __main___uart_uart_sink_valid;
assign __main___uart_uart_sink_ready = __main___uart_rx_fifo_sink_ready;
assign __main___uart_rx_fifo_sink_first = __main___uart_uart_sink_first;
assign __main___uart_rx_fifo_sink_last = __main___uart_uart_sink_last;
assign __main___uart_rx_fifo_sink_payload_data = __main___uart_uart_sink_payload_data;
assign __main___uart_rxtx_w = __main___uart_rx_fifo_source_payload_data;
assign __main___uart_rx_fifo_source_ready = (__main___uart_rx_clear | (1'd0 & __main___uart_rxtx_we));
assign __main___uart_rxempty_status = (~__main___uart_rx_fifo_source_valid);
assign __main___uart_rxfull_status = (~__main___uart_rx_fifo_sink_ready);
assign __main___uart_rx_trigger = __main___uart_rx_fifo_source_valid;
assign __main___uart_tx0 = __main___uart_tx_status;
assign __main___uart_tx1 = __main___uart_tx_pending;
always @(*) begin
	__main___uart_tx_clear <= 1'd0;
	if ((__main___uart_pending_re & __main___uart_pending_r[0])) begin
		__main___uart_tx_clear <= 1'd1;
	end
end
assign __main___uart_rx0 = __main___uart_rx_status;
assign __main___uart_rx1 = __main___uart_rx_pending;
always @(*) begin
	__main___uart_rx_clear <= 1'd0;
	if ((__main___uart_pending_re & __main___uart_pending_r[1])) begin
		__main___uart_rx_clear <= 1'd1;
	end
end
assign __main___uart_irq = ((__main___uart_pending_status[0] & __main___uart_enable_storage[0]) | (__main___uart_pending_status[1] & __main___uart_enable_storage[1]));
assign __main___uart_tx_status = __main___uart_tx_trigger;
assign __main___uart_rx_status = __main___uart_rx_trigger;
assign __main___uart_tx_fifo_syncfifo_din = {__main___uart_tx_fifo_fifo_in_last, __main___uart_tx_fifo_fifo_in_first, __main___uart_tx_fifo_fifo_in_payload_data};
assign {__main___uart_tx_fifo_fifo_out_last, __main___uart_tx_fifo_fifo_out_first, __main___uart_tx_fifo_fifo_out_payload_data} = __main___uart_tx_fifo_syncfifo_dout;
assign __main___uart_tx_fifo_sink_ready = __main___uart_tx_fifo_syncfifo_writable;
assign __main___uart_tx_fifo_syncfifo_we = __main___uart_tx_fifo_sink_valid;
assign __main___uart_tx_fifo_fifo_in_first = __main___uart_tx_fifo_sink_first;
assign __main___uart_tx_fifo_fifo_in_last = __main___uart_tx_fifo_sink_last;
assign __main___uart_tx_fifo_fifo_in_payload_data = __main___uart_tx_fifo_sink_payload_data;
assign __main___uart_tx_fifo_source_valid = __main___uart_tx_fifo_readable;
assign __main___uart_tx_fifo_source_first = __main___uart_tx_fifo_fifo_out_first;
assign __main___uart_tx_fifo_source_last = __main___uart_tx_fifo_fifo_out_last;
assign __main___uart_tx_fifo_source_payload_data = __main___uart_tx_fifo_fifo_out_payload_data;
assign __main___uart_tx_fifo_re = __main___uart_tx_fifo_source_ready;
assign __main___uart_tx_fifo_syncfifo_re = (__main___uart_tx_fifo_syncfifo_readable & ((~__main___uart_tx_fifo_readable) | __main___uart_tx_fifo_re));
assign __main___uart_tx_fifo_level1 = (__main___uart_tx_fifo_level0 + __main___uart_tx_fifo_readable);
always @(*) begin
	__main___uart_tx_fifo_wrport_adr <= 4'd0;
	if (__main___uart_tx_fifo_replace) begin
		__main___uart_tx_fifo_wrport_adr <= (__main___uart_tx_fifo_produce - 1'd1);
	end else begin
		__main___uart_tx_fifo_wrport_adr <= __main___uart_tx_fifo_produce;
	end
end
assign __main___uart_tx_fifo_wrport_dat_w = __main___uart_tx_fifo_syncfifo_din;
assign __main___uart_tx_fifo_wrport_we = (__main___uart_tx_fifo_syncfifo_we & (__main___uart_tx_fifo_syncfifo_writable | __main___uart_tx_fifo_replace));
assign __main___uart_tx_fifo_do_read = (__main___uart_tx_fifo_syncfifo_readable & __main___uart_tx_fifo_syncfifo_re);
assign __main___uart_tx_fifo_rdport_adr = __main___uart_tx_fifo_consume;
assign __main___uart_tx_fifo_syncfifo_dout = __main___uart_tx_fifo_rdport_dat_r;
assign __main___uart_tx_fifo_rdport_re = __main___uart_tx_fifo_do_read;
assign __main___uart_tx_fifo_syncfifo_writable = (__main___uart_tx_fifo_level0 != 5'd16);
assign __main___uart_tx_fifo_syncfifo_readable = (__main___uart_tx_fifo_level0 != 1'd0);
assign __main___uart_rx_fifo_syncfifo_din = {__main___uart_rx_fifo_fifo_in_last, __main___uart_rx_fifo_fifo_in_first, __main___uart_rx_fifo_fifo_in_payload_data};
assign {__main___uart_rx_fifo_fifo_out_last, __main___uart_rx_fifo_fifo_out_first, __main___uart_rx_fifo_fifo_out_payload_data} = __main___uart_rx_fifo_syncfifo_dout;
assign __main___uart_rx_fifo_sink_ready = __main___uart_rx_fifo_syncfifo_writable;
assign __main___uart_rx_fifo_syncfifo_we = __main___uart_rx_fifo_sink_valid;
assign __main___uart_rx_fifo_fifo_in_first = __main___uart_rx_fifo_sink_first;
assign __main___uart_rx_fifo_fifo_in_last = __main___uart_rx_fifo_sink_last;
assign __main___uart_rx_fifo_fifo_in_payload_data = __main___uart_rx_fifo_sink_payload_data;
assign __main___uart_rx_fifo_source_valid = __main___uart_rx_fifo_readable;
assign __main___uart_rx_fifo_source_first = __main___uart_rx_fifo_fifo_out_first;
assign __main___uart_rx_fifo_source_last = __main___uart_rx_fifo_fifo_out_last;
assign __main___uart_rx_fifo_source_payload_data = __main___uart_rx_fifo_fifo_out_payload_data;
assign __main___uart_rx_fifo_re = __main___uart_rx_fifo_source_ready;
assign __main___uart_rx_fifo_syncfifo_re = (__main___uart_rx_fifo_syncfifo_readable & ((~__main___uart_rx_fifo_readable) | __main___uart_rx_fifo_re));
assign __main___uart_rx_fifo_level1 = (__main___uart_rx_fifo_level0 + __main___uart_rx_fifo_readable);
always @(*) begin
	__main___uart_rx_fifo_wrport_adr <= 4'd0;
	if (__main___uart_rx_fifo_replace) begin
		__main___uart_rx_fifo_wrport_adr <= (__main___uart_rx_fifo_produce - 1'd1);
	end else begin
		__main___uart_rx_fifo_wrport_adr <= __main___uart_rx_fifo_produce;
	end
end
assign __main___uart_rx_fifo_wrport_dat_w = __main___uart_rx_fifo_syncfifo_din;
assign __main___uart_rx_fifo_wrport_we = (__main___uart_rx_fifo_syncfifo_we & (__main___uart_rx_fifo_syncfifo_writable | __main___uart_rx_fifo_replace));
assign __main___uart_rx_fifo_do_read = (__main___uart_rx_fifo_syncfifo_readable & __main___uart_rx_fifo_syncfifo_re);
assign __main___uart_rx_fifo_rdport_adr = __main___uart_rx_fifo_consume;
assign __main___uart_rx_fifo_syncfifo_dout = __main___uart_rx_fifo_rdport_dat_r;
assign __main___uart_rx_fifo_rdport_re = __main___uart_rx_fifo_do_read;
assign __main___uart_rx_fifo_syncfifo_writable = (__main___uart_rx_fifo_level0 != 5'd16);
assign __main___uart_rx_fifo_syncfifo_readable = (__main___uart_rx_fifo_level0 != 1'd0);
assign __main___timer_zero_trigger = (__main___timer_value == 1'd0);
assign __main___timer_zero0 = __main___timer_zero_status;
assign __main___timer_zero1 = __main___timer_zero_pending;
always @(*) begin
	__main___timer_zero_clear <= 1'd0;
	if ((__main___timer_pending_re & __main___timer_pending_r)) begin
		__main___timer_zero_clear <= 1'd1;
	end
end
assign __main___timer_irq = (__main___timer_pending_status & __main___timer_enable_storage);
assign __main___timer_zero_status = __main___timer_zero_trigger;
assign {user_led8, user_led7, user_led6, user_led5, user_led4, user_led3, user_led2, user_led1, user_led0} = __main___leds_storage;
assign __main___start0 = __main___start1;
assign __main___length0 = __main___length1;
assign __main___done1 = __main___done0;
assign __main___mosi = __main___mosi_storage;
assign __main___miso_status = __main___miso;
assign __main___cs = __main___sel;
assign __main___cs_mode = __main___mode0;
assign __main___loopback = __main___mode1;
assign __main___clk_rise = (__main___clk_divider1 == (__main___clk_divider0[15:1] - 1'd1));
assign __main___clk_fall = (__main___clk_divider1 == (__main___clk_divider0 - 1'd1));
always @(*) begin
	__main___mosi_latch <= 1'd0;
	__main___miso_latch <= 1'd0;
	__main___clk_enable <= 1'd0;
	__main___irq <= 1'd0;
	builder_subfragments_next_state <= 2'd0;
	__main___done0 <= 1'd0;
	__main___count_next_value <= 4'd0;
	__main___count_next_value_ce <= 1'd0;
	__main___xfer_enable <= 1'd0;
	builder_subfragments_next_state <= builder_subfragments_state;
	case (builder_subfragments_state)
		1'd1: begin
			__main___count_next_value <= 1'd0;
			__main___count_next_value_ce <= 1'd1;
			if (__main___clk_fall) begin
				__main___xfer_enable <= 1'd1;
				builder_subfragments_next_state <= 2'd2;
			end
		end
		2'd2: begin
			__main___clk_enable <= 1'd1;
			__main___xfer_enable <= 1'd1;
			if (__main___clk_fall) begin
				__main___count_next_value <= (__main___count + 1'd1);
				__main___count_next_value_ce <= 1'd1;
				if ((__main___count == (__main___length0 - 1'd1))) begin
					builder_subfragments_next_state <= 2'd3;
				end
			end
		end
		2'd3: begin
			__main___xfer_enable <= 1'd1;
			if (__main___clk_rise) begin
				__main___miso_latch <= 1'd1;
				__main___irq <= 1'd1;
				builder_subfragments_next_state <= 1'd0;
			end
		end
		default: begin
			__main___done0 <= 1'd1;
			if (__main___start0) begin
				__main___done0 <= 1'd0;
				__main___mosi_latch <= 1'd1;
				builder_subfragments_next_state <= 1'd1;
			end
		end
	endcase
end
assign __main___display1_abcdefg0 = __main___display1_abcdefg1;
always @(*) begin
	__main___display1_abcdefg1 <= 7'd0;
	case (__main___display1_value)
		1'd0: begin
			__main___display1_abcdefg1 <= 6'd63;
		end
		1'd1: begin
			__main___display1_abcdefg1 <= 3'd6;
		end
		2'd2: begin
			__main___display1_abcdefg1 <= 7'd91;
		end
		2'd3: begin
			__main___display1_abcdefg1 <= 7'd79;
		end
		3'd4: begin
			__main___display1_abcdefg1 <= 7'd102;
		end
		3'd5: begin
			__main___display1_abcdefg1 <= 7'd109;
		end
		3'd6: begin
			__main___display1_abcdefg1 <= 7'd125;
		end
		3'd7: begin
			__main___display1_abcdefg1 <= 3'd7;
		end
		4'd8: begin
			__main___display1_abcdefg1 <= 7'd127;
		end
		4'd9: begin
			__main___display1_abcdefg1 <= 7'd111;
		end
		4'd10: begin
			__main___display1_abcdefg1 <= 7'd119;
		end
		4'd11: begin
			__main___display1_abcdefg1 <= 7'd124;
		end
		4'd12: begin
			__main___display1_abcdefg1 <= 6'd57;
		end
		4'd13: begin
			__main___display1_abcdefg1 <= 7'd94;
		end
		4'd14: begin
			__main___display1_abcdefg1 <= 7'd121;
		end
		4'd15: begin
			__main___display1_abcdefg1 <= 7'd113;
		end
	endcase
end
assign __main___display2_abcdefg0 = __main___display2_abcdefg1;
always @(*) begin
	__main___display2_abcdefg1 <= 7'd0;
	case (__main___display2_value)
		1'd0: begin
			__main___display2_abcdefg1 <= 6'd63;
		end
		1'd1: begin
			__main___display2_abcdefg1 <= 3'd6;
		end
		2'd2: begin
			__main___display2_abcdefg1 <= 7'd91;
		end
		2'd3: begin
			__main___display2_abcdefg1 <= 7'd79;
		end
		3'd4: begin
			__main___display2_abcdefg1 <= 7'd102;
		end
		3'd5: begin
			__main___display2_abcdefg1 <= 7'd109;
		end
		3'd6: begin
			__main___display2_abcdefg1 <= 7'd125;
		end
		3'd7: begin
			__main___display2_abcdefg1 <= 3'd7;
		end
		4'd8: begin
			__main___display2_abcdefg1 <= 7'd127;
		end
		4'd9: begin
			__main___display2_abcdefg1 <= 7'd111;
		end
		4'd10: begin
			__main___display2_abcdefg1 <= 7'd119;
		end
		4'd11: begin
			__main___display2_abcdefg1 <= 7'd124;
		end
		4'd12: begin
			__main___display2_abcdefg1 <= 6'd57;
		end
		4'd13: begin
			__main___display2_abcdefg1 <= 7'd94;
		end
		4'd14: begin
			__main___display2_abcdefg1 <= 7'd121;
		end
		4'd15: begin
			__main___display2_abcdefg1 <= 7'd113;
		end
	endcase
end
assign __main___display3_abcdefg0 = __main___display3_abcdefg1;
always @(*) begin
	__main___display3_abcdefg1 <= 7'd0;
	case (__main___display3_value)
		1'd0: begin
			__main___display3_abcdefg1 <= 6'd63;
		end
		1'd1: begin
			__main___display3_abcdefg1 <= 3'd6;
		end
		2'd2: begin
			__main___display3_abcdefg1 <= 7'd91;
		end
		2'd3: begin
			__main___display3_abcdefg1 <= 7'd79;
		end
		3'd4: begin
			__main___display3_abcdefg1 <= 7'd102;
		end
		3'd5: begin
			__main___display3_abcdefg1 <= 7'd109;
		end
		3'd6: begin
			__main___display3_abcdefg1 <= 7'd125;
		end
		3'd7: begin
			__main___display3_abcdefg1 <= 3'd7;
		end
		4'd8: begin
			__main___display3_abcdefg1 <= 7'd127;
		end
		4'd9: begin
			__main___display3_abcdefg1 <= 7'd111;
		end
		4'd10: begin
			__main___display3_abcdefg1 <= 7'd119;
		end
		4'd11: begin
			__main___display3_abcdefg1 <= 7'd124;
		end
		4'd12: begin
			__main___display3_abcdefg1 <= 6'd57;
		end
		4'd13: begin
			__main___display3_abcdefg1 <= 7'd94;
		end
		4'd14: begin
			__main___display3_abcdefg1 <= 7'd121;
		end
		4'd15: begin
			__main___display3_abcdefg1 <= 7'd113;
		end
	endcase
end
assign __main___display4_abcdefg0 = __main___display4_abcdefg1;
always @(*) begin
	__main___display4_abcdefg1 <= 7'd0;
	case (__main___display4_value)
		1'd0: begin
			__main___display4_abcdefg1 <= 6'd63;
		end
		1'd1: begin
			__main___display4_abcdefg1 <= 3'd6;
		end
		2'd2: begin
			__main___display4_abcdefg1 <= 7'd91;
		end
		2'd3: begin
			__main___display4_abcdefg1 <= 7'd79;
		end
		3'd4: begin
			__main___display4_abcdefg1 <= 7'd102;
		end
		3'd5: begin
			__main___display4_abcdefg1 <= 7'd109;
		end
		3'd6: begin
			__main___display4_abcdefg1 <= 7'd125;
		end
		3'd7: begin
			__main___display4_abcdefg1 <= 3'd7;
		end
		4'd8: begin
			__main___display4_abcdefg1 <= 7'd127;
		end
		4'd9: begin
			__main___display4_abcdefg1 <= 7'd111;
		end
		4'd10: begin
			__main___display4_abcdefg1 <= 7'd119;
		end
		4'd11: begin
			__main___display4_abcdefg1 <= 7'd124;
		end
		4'd12: begin
			__main___display4_abcdefg1 <= 6'd57;
		end
		4'd13: begin
			__main___display4_abcdefg1 <= 7'd94;
		end
		4'd14: begin
			__main___display4_abcdefg1 <= 7'd121;
		end
		4'd15: begin
			__main___display4_abcdefg1 <= 7'd113;
		end
	endcase
end
assign __main___display5_abcdefg0 = __main___display5_abcdefg1;
always @(*) begin
	__main___display5_abcdefg1 <= 7'd0;
	case (__main___display5_value)
		1'd0: begin
			__main___display5_abcdefg1 <= 6'd63;
		end
		1'd1: begin
			__main___display5_abcdefg1 <= 3'd6;
		end
		2'd2: begin
			__main___display5_abcdefg1 <= 7'd91;
		end
		2'd3: begin
			__main___display5_abcdefg1 <= 7'd79;
		end
		3'd4: begin
			__main___display5_abcdefg1 <= 7'd102;
		end
		3'd5: begin
			__main___display5_abcdefg1 <= 7'd109;
		end
		3'd6: begin
			__main___display5_abcdefg1 <= 7'd125;
		end
		3'd7: begin
			__main___display5_abcdefg1 <= 3'd7;
		end
		4'd8: begin
			__main___display5_abcdefg1 <= 7'd127;
		end
		4'd9: begin
			__main___display5_abcdefg1 <= 7'd111;
		end
		4'd10: begin
			__main___display5_abcdefg1 <= 7'd119;
		end
		4'd11: begin
			__main___display5_abcdefg1 <= 7'd124;
		end
		4'd12: begin
			__main___display5_abcdefg1 <= 6'd57;
		end
		4'd13: begin
			__main___display5_abcdefg1 <= 7'd94;
		end
		4'd14: begin
			__main___display5_abcdefg1 <= 7'd121;
		end
		4'd15: begin
			__main___display5_abcdefg1 <= 7'd113;
		end
	endcase
end
assign __main___display6_abcdefg0 = __main___display6_abcdefg1;
always @(*) begin
	__main___display6_abcdefg1 <= 7'd0;
	case (__main___display6_value)
		1'd0: begin
			__main___display6_abcdefg1 <= 6'd63;
		end
		1'd1: begin
			__main___display6_abcdefg1 <= 3'd6;
		end
		2'd2: begin
			__main___display6_abcdefg1 <= 7'd91;
		end
		2'd3: begin
			__main___display6_abcdefg1 <= 7'd79;
		end
		3'd4: begin
			__main___display6_abcdefg1 <= 7'd102;
		end
		3'd5: begin
			__main___display6_abcdefg1 <= 7'd109;
		end
		3'd6: begin
			__main___display6_abcdefg1 <= 7'd125;
		end
		3'd7: begin
			__main___display6_abcdefg1 <= 3'd7;
		end
		4'd8: begin
			__main___display6_abcdefg1 <= 7'd127;
		end
		4'd9: begin
			__main___display6_abcdefg1 <= 7'd111;
		end
		4'd10: begin
			__main___display6_abcdefg1 <= 7'd119;
		end
		4'd11: begin
			__main___display6_abcdefg1 <= 7'd124;
		end
		4'd12: begin
			__main___display6_abcdefg1 <= 6'd57;
		end
		4'd13: begin
			__main___display6_abcdefg1 <= 7'd94;
		end
		4'd14: begin
			__main___display6_abcdefg1 <= 7'd121;
		end
		4'd15: begin
			__main___display6_abcdefg1 <= 7'd113;
		end
	endcase
end
always @(*) begin
	builder_basesoc_basesoc_wishbone_ack <= 1'd0;
	builder_basesoc_basesoc_dat_w <= 32'd0;
	builder_basesoc_next_state <= 1'd0;
	builder_basesoc_basesoc_wishbone_dat_r <= 32'd0;
	builder_basesoc_basesoc_adr <= 14'd0;
	builder_basesoc_basesoc_we <= 1'd0;
	builder_basesoc_next_state <= builder_basesoc_state;
	case (builder_basesoc_state)
		1'd1: begin
			builder_basesoc_basesoc_wishbone_ack <= 1'd1;
			builder_basesoc_basesoc_wishbone_dat_r <= builder_basesoc_basesoc_dat_r;
			builder_basesoc_next_state <= 1'd0;
		end
		default: begin
			builder_basesoc_basesoc_dat_w <= builder_basesoc_basesoc_wishbone_dat_w;
			if ((builder_basesoc_basesoc_wishbone_cyc & builder_basesoc_basesoc_wishbone_stb)) begin
				builder_basesoc_basesoc_adr <= builder_basesoc_basesoc_wishbone_adr;
				builder_basesoc_basesoc_we <= (builder_basesoc_basesoc_wishbone_we & (builder_basesoc_basesoc_wishbone_sel != 1'd0));
				builder_basesoc_next_state <= 1'd1;
			end
		end
	endcase
end
assign builder_basesoc_shared_adr = builder_comb_array_muxed0;
assign builder_basesoc_shared_dat_w = builder_comb_array_muxed1;
assign builder_basesoc_shared_sel = builder_comb_array_muxed2;
assign builder_basesoc_shared_cyc = builder_comb_array_muxed3;
assign builder_basesoc_shared_stb = builder_comb_array_muxed4;
assign builder_basesoc_shared_we = builder_comb_array_muxed5;
assign builder_basesoc_shared_cti = builder_comb_array_muxed6;
assign builder_basesoc_shared_bte = builder_comb_array_muxed7;
assign __main___ibus_dat_r = builder_basesoc_shared_dat_r;
assign __main___dbus_dat_r = builder_basesoc_shared_dat_r;
assign __main___ibus_ack = (builder_basesoc_shared_ack & (builder_basesoc_grant == 1'd0));
assign __main___dbus_ack = (builder_basesoc_shared_ack & (builder_basesoc_grant == 1'd1));
assign __main___ibus_err = (builder_basesoc_shared_err & (builder_basesoc_grant == 1'd0));
assign __main___dbus_err = (builder_basesoc_shared_err & (builder_basesoc_grant == 1'd1));
assign builder_basesoc_request = {__main___dbus_cyc, __main___ibus_cyc};
always @(*) begin
	builder_basesoc_slave_sel <= 4'd0;
	builder_basesoc_slave_sel[0] <= (builder_basesoc_shared_adr[29:13] == 1'd0);
	builder_basesoc_slave_sel[1] <= (builder_basesoc_shared_adr[29:11] == 16'd32768);
	builder_basesoc_slave_sel[2] <= (builder_basesoc_shared_adr[29:12] == 17'd65536);
	builder_basesoc_slave_sel[3] <= (builder_basesoc_shared_adr[29:14] == 16'd61440);
end
assign __main___ram_bus_adr = builder_basesoc_shared_adr;
assign __main___ram_bus_dat_w = builder_basesoc_shared_dat_w;
assign __main___ram_bus_sel = builder_basesoc_shared_sel;
assign __main___ram_bus_stb = builder_basesoc_shared_stb;
assign __main___ram_bus_we = builder_basesoc_shared_we;
assign __main___ram_bus_cti = builder_basesoc_shared_cti;
assign __main___ram_bus_bte = builder_basesoc_shared_bte;
assign __main___interface0_ram_bus_adr = builder_basesoc_shared_adr;
assign __main___interface0_ram_bus_dat_w = builder_basesoc_shared_dat_w;
assign __main___interface0_ram_bus_sel = builder_basesoc_shared_sel;
assign __main___interface0_ram_bus_stb = builder_basesoc_shared_stb;
assign __main___interface0_ram_bus_we = builder_basesoc_shared_we;
assign __main___interface0_ram_bus_cti = builder_basesoc_shared_cti;
assign __main___interface0_ram_bus_bte = builder_basesoc_shared_bte;
assign __main___interface1_ram_bus_adr = builder_basesoc_shared_adr;
assign __main___interface1_ram_bus_dat_w = builder_basesoc_shared_dat_w;
assign __main___interface1_ram_bus_sel = builder_basesoc_shared_sel;
assign __main___interface1_ram_bus_stb = builder_basesoc_shared_stb;
assign __main___interface1_ram_bus_we = builder_basesoc_shared_we;
assign __main___interface1_ram_bus_cti = builder_basesoc_shared_cti;
assign __main___interface1_ram_bus_bte = builder_basesoc_shared_bte;
assign builder_basesoc_basesoc_wishbone_adr = builder_basesoc_shared_adr;
assign builder_basesoc_basesoc_wishbone_dat_w = builder_basesoc_shared_dat_w;
assign builder_basesoc_basesoc_wishbone_sel = builder_basesoc_shared_sel;
assign builder_basesoc_basesoc_wishbone_stb = builder_basesoc_shared_stb;
assign builder_basesoc_basesoc_wishbone_we = builder_basesoc_shared_we;
assign builder_basesoc_basesoc_wishbone_cti = builder_basesoc_shared_cti;
assign builder_basesoc_basesoc_wishbone_bte = builder_basesoc_shared_bte;
assign __main___ram_bus_cyc = (builder_basesoc_shared_cyc & builder_basesoc_slave_sel[0]);
assign __main___interface0_ram_bus_cyc = (builder_basesoc_shared_cyc & builder_basesoc_slave_sel[1]);
assign __main___interface1_ram_bus_cyc = (builder_basesoc_shared_cyc & builder_basesoc_slave_sel[2]);
assign builder_basesoc_basesoc_wishbone_cyc = (builder_basesoc_shared_cyc & builder_basesoc_slave_sel[3]);
assign builder_basesoc_shared_err = (((__main___ram_bus_err | __main___interface0_ram_bus_err) | __main___interface1_ram_bus_err) | builder_basesoc_basesoc_wishbone_err);
assign builder_basesoc_wait = ((builder_basesoc_shared_stb & builder_basesoc_shared_cyc) & (~builder_basesoc_shared_ack));
always @(*) begin
	builder_basesoc_error <= 1'd0;
	builder_basesoc_shared_ack <= 1'd0;
	builder_basesoc_shared_dat_r <= 32'd0;
	builder_basesoc_shared_ack <= (((__main___ram_bus_ack | __main___interface0_ram_bus_ack) | __main___interface1_ram_bus_ack) | builder_basesoc_basesoc_wishbone_ack);
	builder_basesoc_shared_dat_r <= (((({32{builder_basesoc_slave_sel_r[0]}} & __main___ram_bus_dat_r) | ({32{builder_basesoc_slave_sel_r[1]}} & __main___interface0_ram_bus_dat_r)) | ({32{builder_basesoc_slave_sel_r[2]}} & __main___interface1_ram_bus_dat_r)) | ({32{builder_basesoc_slave_sel_r[3]}} & builder_basesoc_basesoc_wishbone_dat_r));
	if (builder_basesoc_done) begin
		builder_basesoc_shared_dat_r <= 32'd4294967295;
		builder_basesoc_shared_ack <= 1'd1;
		builder_basesoc_error <= 1'd1;
	end
end
assign builder_basesoc_done = (builder_basesoc_count == 1'd0);
assign builder_basesoc_csr_bankarray_csrbank0_sel = (builder_basesoc_csr_bankarray_interface0_bank_bus_adr[13:9] == 2'd3);
assign builder_basesoc_csr_bankarray_csrbank0_control0_r = builder_basesoc_csr_bankarray_interface0_bank_bus_dat_w[15:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank0_control0_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank0_control0_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank0_sel & (builder_basesoc_csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank0_control0_re <= builder_basesoc_csr_bankarray_interface0_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank0_control0_we <= (~builder_basesoc_csr_bankarray_interface0_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank0_status_r = builder_basesoc_csr_bankarray_interface0_bank_bus_dat_w[0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank0_status_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank0_status_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank0_sel & (builder_basesoc_csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd1))) begin
		builder_basesoc_csr_bankarray_csrbank0_status_re <= builder_basesoc_csr_bankarray_interface0_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank0_status_we <= (~builder_basesoc_csr_bankarray_interface0_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank0_mosi0_r = builder_basesoc_csr_bankarray_interface0_bank_bus_dat_w[15:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank0_mosi0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank0_mosi0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank0_sel & (builder_basesoc_csr_bankarray_interface0_bank_bus_adr[8:0] == 2'd2))) begin
		builder_basesoc_csr_bankarray_csrbank0_mosi0_re <= builder_basesoc_csr_bankarray_interface0_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank0_mosi0_we <= (~builder_basesoc_csr_bankarray_interface0_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank0_miso_r = builder_basesoc_csr_bankarray_interface0_bank_bus_dat_w[15:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank0_miso_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank0_miso_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank0_sel & (builder_basesoc_csr_bankarray_interface0_bank_bus_adr[8:0] == 2'd3))) begin
		builder_basesoc_csr_bankarray_csrbank0_miso_re <= builder_basesoc_csr_bankarray_interface0_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank0_miso_we <= (~builder_basesoc_csr_bankarray_interface0_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank0_cs0_r = builder_basesoc_csr_bankarray_interface0_bank_bus_dat_w[16:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank0_cs0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank0_cs0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank0_sel & (builder_basesoc_csr_bankarray_interface0_bank_bus_adr[8:0] == 3'd4))) begin
		builder_basesoc_csr_bankarray_csrbank0_cs0_re <= builder_basesoc_csr_bankarray_interface0_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank0_cs0_we <= (~builder_basesoc_csr_bankarray_interface0_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank0_loopback0_r = builder_basesoc_csr_bankarray_interface0_bank_bus_dat_w[0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank0_loopback0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank0_loopback0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank0_sel & (builder_basesoc_csr_bankarray_interface0_bank_bus_adr[8:0] == 3'd5))) begin
		builder_basesoc_csr_bankarray_csrbank0_loopback0_re <= builder_basesoc_csr_bankarray_interface0_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank0_loopback0_we <= (~builder_basesoc_csr_bankarray_interface0_bank_bus_we);
	end
end
always @(*) begin
	__main___start1 <= 1'd0;
	if (__main___control_re) begin
		__main___start1 <= __main___control_storage[0];
	end
end
assign __main___length1 = __main___control_storage[15:8];
assign builder_basesoc_csr_bankarray_csrbank0_control0_w = __main___control_storage[15:0];
assign __main___status_status = __main___done1;
assign builder_basesoc_csr_bankarray_csrbank0_status_w = __main___status_status;
assign __main___status_we = builder_basesoc_csr_bankarray_csrbank0_status_we;
assign builder_basesoc_csr_bankarray_csrbank0_mosi0_w = __main___mosi_storage[15:0];
assign builder_basesoc_csr_bankarray_csrbank0_miso_w = __main___miso_status[15:0];
assign __main___miso_we = builder_basesoc_csr_bankarray_csrbank0_miso_we;
assign __main___sel = __main___cs_storage[0];
assign __main___mode0 = __main___cs_storage[16];
assign builder_basesoc_csr_bankarray_csrbank0_cs0_w = __main___cs_storage[16:0];
assign __main___mode1 = __main___loopback_storage;
assign builder_basesoc_csr_bankarray_csrbank0_loopback0_w = __main___loopback_storage;
assign builder_basesoc_csr_bankarray_csrbank1_sel = (builder_basesoc_csr_bankarray_interface1_bank_bus_adr[13:9] == 2'd2);
assign builder_basesoc_csr_bankarray_csrbank1_in_r = builder_basesoc_csr_bankarray_interface1_bank_bus_dat_w[0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank1_in_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank1_in_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank1_sel & (builder_basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank1_in_re <= builder_basesoc_csr_bankarray_interface1_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank1_in_we <= (~builder_basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank1_in_w = __main___buttons_status;
assign __main___buttons_we = builder_basesoc_csr_bankarray_csrbank1_in_we;
assign builder_basesoc_csr_bankarray_csrbank2_sel = (builder_basesoc_csr_bankarray_interface2_bank_bus_adr[13:9] == 4'd10);
assign builder_basesoc_csr_bankarray_csrbank2_reset0_r = builder_basesoc_csr_bankarray_interface2_bank_bus_dat_w[1:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank2_reset0_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank2_reset0_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank2_sel & (builder_basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank2_reset0_re <= builder_basesoc_csr_bankarray_interface2_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank2_reset0_we <= (~builder_basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank2_scratch0_r = builder_basesoc_csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank2_scratch0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank2_scratch0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank2_sel & (builder_basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd1))) begin
		builder_basesoc_csr_bankarray_csrbank2_scratch0_re <= builder_basesoc_csr_bankarray_interface2_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank2_scratch0_we <= (~builder_basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank2_bus_errors_r = builder_basesoc_csr_bankarray_interface2_bank_bus_dat_w[31:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank2_bus_errors_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank2_bus_errors_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank2_sel & (builder_basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 2'd2))) begin
		builder_basesoc_csr_bankarray_csrbank2_bus_errors_re <= builder_basesoc_csr_bankarray_interface2_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank2_bus_errors_we <= (~builder_basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
always @(*) begin
	__main___soc_rst <= 1'd0;
	if (__main___reset_re) begin
		__main___soc_rst <= __main___reset_storage[0];
	end
end
assign __main___cpu_rst = __main___reset_storage[1];
assign builder_basesoc_csr_bankarray_csrbank2_reset0_w = __main___reset_storage[1:0];
assign builder_basesoc_csr_bankarray_csrbank2_scratch0_w = __main___scratch_storage[31:0];
assign builder_basesoc_csr_bankarray_csrbank2_bus_errors_w = __main___bus_errors_status[31:0];
assign __main___bus_errors_we = builder_basesoc_csr_bankarray_csrbank2_bus_errors_we;
assign builder_basesoc_csr_bankarray_csrbank3_sel = (builder_basesoc_csr_bankarray_interface3_bank_bus_adr[13:9] == 3'd4);
assign builder_basesoc_csr_bankarray_csrbank3_value0_r = builder_basesoc_csr_bankarray_interface3_bank_bus_dat_w[3:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank3_value0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank3_value0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank3_sel & (builder_basesoc_csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank3_value0_re <= builder_basesoc_csr_bankarray_interface3_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank3_value0_we <= (~builder_basesoc_csr_bankarray_interface3_bank_bus_we);
	end
end
assign __main___display1_write_r = builder_basesoc_csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
	__main___display1_write_re <= 1'd0;
	__main___display1_write_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank3_sel & (builder_basesoc_csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd1))) begin
		__main___display1_write_re <= builder_basesoc_csr_bankarray_interface3_bank_bus_we;
		__main___display1_write_we <= (~builder_basesoc_csr_bankarray_interface3_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank3_value0_w = __main___display1_storage[3:0];
assign builder_basesoc_csr_bankarray_csrbank4_sel = (builder_basesoc_csr_bankarray_interface4_bank_bus_adr[13:9] == 3'd5);
assign builder_basesoc_csr_bankarray_csrbank4_value0_r = builder_basesoc_csr_bankarray_interface4_bank_bus_dat_w[3:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank4_value0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank4_value0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank4_sel & (builder_basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank4_value0_re <= builder_basesoc_csr_bankarray_interface4_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank4_value0_we <= (~builder_basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign __main___display2_write_r = builder_basesoc_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	__main___display2_write_we <= 1'd0;
	__main___display2_write_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank4_sel & (builder_basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd1))) begin
		__main___display2_write_re <= builder_basesoc_csr_bankarray_interface4_bank_bus_we;
		__main___display2_write_we <= (~builder_basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank4_value0_w = __main___display2_storage[3:0];
assign builder_basesoc_csr_bankarray_csrbank5_sel = (builder_basesoc_csr_bankarray_interface5_bank_bus_adr[13:9] == 3'd6);
assign builder_basesoc_csr_bankarray_csrbank5_value0_r = builder_basesoc_csr_bankarray_interface5_bank_bus_dat_w[3:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank5_value0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank5_value0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank5_sel & (builder_basesoc_csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank5_value0_re <= builder_basesoc_csr_bankarray_interface5_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank5_value0_we <= (~builder_basesoc_csr_bankarray_interface5_bank_bus_we);
	end
end
assign __main___display3_write_r = builder_basesoc_csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
	__main___display3_write_re <= 1'd0;
	__main___display3_write_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank5_sel & (builder_basesoc_csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd1))) begin
		__main___display3_write_re <= builder_basesoc_csr_bankarray_interface5_bank_bus_we;
		__main___display3_write_we <= (~builder_basesoc_csr_bankarray_interface5_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank5_value0_w = __main___display3_storage[3:0];
assign builder_basesoc_csr_bankarray_csrbank6_sel = (builder_basesoc_csr_bankarray_interface6_bank_bus_adr[13:9] == 3'd7);
assign builder_basesoc_csr_bankarray_csrbank6_value0_r = builder_basesoc_csr_bankarray_interface6_bank_bus_dat_w[3:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank6_value0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank6_value0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank6_sel & (builder_basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank6_value0_re <= builder_basesoc_csr_bankarray_interface6_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank6_value0_we <= (~builder_basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign __main___display4_write_r = builder_basesoc_csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
	__main___display4_write_we <= 1'd0;
	__main___display4_write_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank6_sel & (builder_basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd1))) begin
		__main___display4_write_re <= builder_basesoc_csr_bankarray_interface6_bank_bus_we;
		__main___display4_write_we <= (~builder_basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank6_value0_w = __main___display4_storage[3:0];
assign builder_basesoc_csr_bankarray_csrbank7_sel = (builder_basesoc_csr_bankarray_interface7_bank_bus_adr[13:9] == 4'd8);
assign builder_basesoc_csr_bankarray_csrbank7_value0_r = builder_basesoc_csr_bankarray_interface7_bank_bus_dat_w[3:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank7_value0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank7_value0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank7_sel & (builder_basesoc_csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank7_value0_re <= builder_basesoc_csr_bankarray_interface7_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank7_value0_we <= (~builder_basesoc_csr_bankarray_interface7_bank_bus_we);
	end
end
assign __main___display5_write_r = builder_basesoc_csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
	__main___display5_write_re <= 1'd0;
	__main___display5_write_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank7_sel & (builder_basesoc_csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd1))) begin
		__main___display5_write_re <= builder_basesoc_csr_bankarray_interface7_bank_bus_we;
		__main___display5_write_we <= (~builder_basesoc_csr_bankarray_interface7_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank7_value0_w = __main___display5_storage[3:0];
assign builder_basesoc_csr_bankarray_csrbank8_sel = (builder_basesoc_csr_bankarray_interface8_bank_bus_adr[13:9] == 4'd9);
assign builder_basesoc_csr_bankarray_csrbank8_value0_r = builder_basesoc_csr_bankarray_interface8_bank_bus_dat_w[3:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank8_value0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank8_value0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank8_sel & (builder_basesoc_csr_bankarray_interface8_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank8_value0_re <= builder_basesoc_csr_bankarray_interface8_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank8_value0_we <= (~builder_basesoc_csr_bankarray_interface8_bank_bus_we);
	end
end
assign __main___display6_write_r = builder_basesoc_csr_bankarray_interface8_bank_bus_dat_w[0];
always @(*) begin
	__main___display6_write_we <= 1'd0;
	__main___display6_write_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank8_sel & (builder_basesoc_csr_bankarray_interface8_bank_bus_adr[8:0] == 1'd1))) begin
		__main___display6_write_re <= builder_basesoc_csr_bankarray_interface8_bank_bus_we;
		__main___display6_write_we <= (~builder_basesoc_csr_bankarray_interface8_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank8_value0_w = __main___display6_storage[3:0];
assign builder_basesoc_csr_bankarray_sel = (builder_basesoc_csr_bankarray_sram_bus_adr[13:9] == 4'd11);
always @(*) begin
	builder_basesoc_csr_bankarray_sram_bus_dat_r <= 32'd0;
	if (builder_basesoc_csr_bankarray_sel_r) begin
		builder_basesoc_csr_bankarray_sram_bus_dat_r <= builder_basesoc_csr_bankarray_dat_r;
	end
end
assign builder_basesoc_csr_bankarray_adr = builder_basesoc_csr_bankarray_sram_bus_adr[5:0];
assign builder_basesoc_csr_bankarray_csrbank9_sel = (builder_basesoc_csr_bankarray_interface9_bank_bus_adr[13:9] == 1'd0);
assign builder_basesoc_csr_bankarray_csrbank9_out0_r = builder_basesoc_csr_bankarray_interface9_bank_bus_dat_w[8:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank9_out0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank9_out0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank9_sel & (builder_basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank9_out0_re <= builder_basesoc_csr_bankarray_interface9_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank9_out0_we <= (~builder_basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank9_out0_w = __main___leds_storage[8:0];
assign builder_basesoc_csr_bankarray_csrbank10_sel = (builder_basesoc_csr_bankarray_interface10_bank_bus_adr[13:9] == 1'd1);
assign builder_basesoc_csr_bankarray_csrbank10_in_r = builder_basesoc_csr_bankarray_interface10_bank_bus_dat_w[8:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank10_in_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank10_in_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank10_sel & (builder_basesoc_csr_bankarray_interface10_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank10_in_re <= builder_basesoc_csr_bankarray_interface10_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank10_in_we <= (~builder_basesoc_csr_bankarray_interface10_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank10_in_w = __main___switches_status[8:0];
assign __main___switches_we = builder_basesoc_csr_bankarray_csrbank10_in_we;
assign builder_basesoc_csr_bankarray_csrbank11_sel = (builder_basesoc_csr_bankarray_interface11_bank_bus_adr[13:9] == 4'd12);
assign builder_basesoc_csr_bankarray_csrbank11_load0_r = builder_basesoc_csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank11_load0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank11_load0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank11_sel & (builder_basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank11_load0_re <= builder_basesoc_csr_bankarray_interface11_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank11_load0_we <= (~builder_basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank11_reload0_r = builder_basesoc_csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank11_reload0_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank11_reload0_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank11_sel & (builder_basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 1'd1))) begin
		builder_basesoc_csr_bankarray_csrbank11_reload0_re <= builder_basesoc_csr_bankarray_interface11_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank11_reload0_we <= (~builder_basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank11_en0_r = builder_basesoc_csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank11_en0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank11_en0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank11_sel & (builder_basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 2'd2))) begin
		builder_basesoc_csr_bankarray_csrbank11_en0_re <= builder_basesoc_csr_bankarray_interface11_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank11_en0_we <= (~builder_basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank11_update_value0_r = builder_basesoc_csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank11_update_value0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank11_update_value0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank11_sel & (builder_basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 2'd3))) begin
		builder_basesoc_csr_bankarray_csrbank11_update_value0_re <= builder_basesoc_csr_bankarray_interface11_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank11_update_value0_we <= (~builder_basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank11_value_r = builder_basesoc_csr_bankarray_interface11_bank_bus_dat_w[31:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank11_value_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank11_value_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank11_sel & (builder_basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd4))) begin
		builder_basesoc_csr_bankarray_csrbank11_value_re <= builder_basesoc_csr_bankarray_interface11_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank11_value_we <= (~builder_basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank11_ev_status_r = builder_basesoc_csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank11_ev_status_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank11_ev_status_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank11_sel & (builder_basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd5))) begin
		builder_basesoc_csr_bankarray_csrbank11_ev_status_re <= builder_basesoc_csr_bankarray_interface11_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank11_ev_status_we <= (~builder_basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank11_ev_pending_r = builder_basesoc_csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank11_ev_pending_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank11_ev_pending_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank11_sel & (builder_basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd6))) begin
		builder_basesoc_csr_bankarray_csrbank11_ev_pending_re <= builder_basesoc_csr_bankarray_interface11_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank11_ev_pending_we <= (~builder_basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank11_ev_enable0_r = builder_basesoc_csr_bankarray_interface11_bank_bus_dat_w[0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank11_ev_enable0_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank11_ev_enable0_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank11_sel & (builder_basesoc_csr_bankarray_interface11_bank_bus_adr[8:0] == 3'd7))) begin
		builder_basesoc_csr_bankarray_csrbank11_ev_enable0_re <= builder_basesoc_csr_bankarray_interface11_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank11_ev_enable0_we <= (~builder_basesoc_csr_bankarray_interface11_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank11_load0_w = __main___timer_load_storage[31:0];
assign builder_basesoc_csr_bankarray_csrbank11_reload0_w = __main___timer_reload_storage[31:0];
assign builder_basesoc_csr_bankarray_csrbank11_en0_w = __main___timer_en_storage;
assign builder_basesoc_csr_bankarray_csrbank11_update_value0_w = __main___timer_update_value_storage;
assign builder_basesoc_csr_bankarray_csrbank11_value_w = __main___timer_value_status[31:0];
assign __main___timer_value_we = builder_basesoc_csr_bankarray_csrbank11_value_we;
assign __main___timer_status_status = __main___timer_zero0;
assign builder_basesoc_csr_bankarray_csrbank11_ev_status_w = __main___timer_status_status;
assign __main___timer_status_we = builder_basesoc_csr_bankarray_csrbank11_ev_status_we;
assign __main___timer_pending_status = __main___timer_zero1;
assign builder_basesoc_csr_bankarray_csrbank11_ev_pending_w = __main___timer_pending_status;
assign __main___timer_pending_we = builder_basesoc_csr_bankarray_csrbank11_ev_pending_we;
assign __main___timer_zero2 = __main___timer_enable_storage;
assign builder_basesoc_csr_bankarray_csrbank11_ev_enable0_w = __main___timer_enable_storage;
assign builder_basesoc_csr_bankarray_csrbank12_sel = (builder_basesoc_csr_bankarray_interface12_bank_bus_adr[13:9] == 4'd13);
assign __main___uart_rxtx_r = builder_basesoc_csr_bankarray_interface12_bank_bus_dat_w[7:0];
always @(*) begin
	__main___uart_rxtx_we <= 1'd0;
	__main___uart_rxtx_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank12_sel & (builder_basesoc_csr_bankarray_interface12_bank_bus_adr[8:0] == 1'd0))) begin
		__main___uart_rxtx_re <= builder_basesoc_csr_bankarray_interface12_bank_bus_we;
		__main___uart_rxtx_we <= (~builder_basesoc_csr_bankarray_interface12_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank12_txfull_r = builder_basesoc_csr_bankarray_interface12_bank_bus_dat_w[0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank12_txfull_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank12_txfull_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank12_sel & (builder_basesoc_csr_bankarray_interface12_bank_bus_adr[8:0] == 1'd1))) begin
		builder_basesoc_csr_bankarray_csrbank12_txfull_re <= builder_basesoc_csr_bankarray_interface12_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank12_txfull_we <= (~builder_basesoc_csr_bankarray_interface12_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank12_rxempty_r = builder_basesoc_csr_bankarray_interface12_bank_bus_dat_w[0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank12_rxempty_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank12_rxempty_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank12_sel & (builder_basesoc_csr_bankarray_interface12_bank_bus_adr[8:0] == 2'd2))) begin
		builder_basesoc_csr_bankarray_csrbank12_rxempty_re <= builder_basesoc_csr_bankarray_interface12_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank12_rxempty_we <= (~builder_basesoc_csr_bankarray_interface12_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank12_ev_status_r = builder_basesoc_csr_bankarray_interface12_bank_bus_dat_w[1:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank12_ev_status_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank12_ev_status_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank12_sel & (builder_basesoc_csr_bankarray_interface12_bank_bus_adr[8:0] == 2'd3))) begin
		builder_basesoc_csr_bankarray_csrbank12_ev_status_re <= builder_basesoc_csr_bankarray_interface12_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank12_ev_status_we <= (~builder_basesoc_csr_bankarray_interface12_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank12_ev_pending_r = builder_basesoc_csr_bankarray_interface12_bank_bus_dat_w[1:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank12_ev_pending_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank12_ev_pending_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank12_sel & (builder_basesoc_csr_bankarray_interface12_bank_bus_adr[8:0] == 3'd4))) begin
		builder_basesoc_csr_bankarray_csrbank12_ev_pending_re <= builder_basesoc_csr_bankarray_interface12_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank12_ev_pending_we <= (~builder_basesoc_csr_bankarray_interface12_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank12_ev_enable0_r = builder_basesoc_csr_bankarray_interface12_bank_bus_dat_w[1:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank12_ev_enable0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank12_ev_enable0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank12_sel & (builder_basesoc_csr_bankarray_interface12_bank_bus_adr[8:0] == 3'd5))) begin
		builder_basesoc_csr_bankarray_csrbank12_ev_enable0_re <= builder_basesoc_csr_bankarray_interface12_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank12_ev_enable0_we <= (~builder_basesoc_csr_bankarray_interface12_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank12_txempty_r = builder_basesoc_csr_bankarray_interface12_bank_bus_dat_w[0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank12_txempty_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank12_txempty_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank12_sel & (builder_basesoc_csr_bankarray_interface12_bank_bus_adr[8:0] == 3'd6))) begin
		builder_basesoc_csr_bankarray_csrbank12_txempty_re <= builder_basesoc_csr_bankarray_interface12_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank12_txempty_we <= (~builder_basesoc_csr_bankarray_interface12_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank12_rxfull_r = builder_basesoc_csr_bankarray_interface12_bank_bus_dat_w[0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank12_rxfull_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank12_rxfull_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank12_sel & (builder_basesoc_csr_bankarray_interface12_bank_bus_adr[8:0] == 3'd7))) begin
		builder_basesoc_csr_bankarray_csrbank12_rxfull_re <= builder_basesoc_csr_bankarray_interface12_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank12_rxfull_we <= (~builder_basesoc_csr_bankarray_interface12_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank12_txfull_w = __main___uart_txfull_status;
assign __main___uart_txfull_we = builder_basesoc_csr_bankarray_csrbank12_txfull_we;
assign builder_basesoc_csr_bankarray_csrbank12_rxempty_w = __main___uart_rxempty_status;
assign __main___uart_rxempty_we = builder_basesoc_csr_bankarray_csrbank12_rxempty_we;
always @(*) begin
	__main___uart_status_status <= 2'd0;
	__main___uart_status_status[0] <= __main___uart_tx0;
	__main___uart_status_status[1] <= __main___uart_rx0;
end
assign builder_basesoc_csr_bankarray_csrbank12_ev_status_w = __main___uart_status_status[1:0];
assign __main___uart_status_we = builder_basesoc_csr_bankarray_csrbank12_ev_status_we;
always @(*) begin
	__main___uart_pending_status <= 2'd0;
	__main___uart_pending_status[0] <= __main___uart_tx1;
	__main___uart_pending_status[1] <= __main___uart_rx1;
end
assign builder_basesoc_csr_bankarray_csrbank12_ev_pending_w = __main___uart_pending_status[1:0];
assign __main___uart_pending_we = builder_basesoc_csr_bankarray_csrbank12_ev_pending_we;
assign __main___uart_tx2 = __main___uart_enable_storage[0];
assign __main___uart_rx2 = __main___uart_enable_storage[1];
assign builder_basesoc_csr_bankarray_csrbank12_ev_enable0_w = __main___uart_enable_storage[1:0];
assign builder_basesoc_csr_bankarray_csrbank12_txempty_w = __main___uart_txempty_status;
assign __main___uart_txempty_we = builder_basesoc_csr_bankarray_csrbank12_txempty_we;
assign builder_basesoc_csr_bankarray_csrbank12_rxfull_w = __main___uart_rxfull_status;
assign __main___uart_rxfull_we = builder_basesoc_csr_bankarray_csrbank12_rxfull_we;
assign builder_basesoc_csr_interconnect_adr = builder_basesoc_basesoc_adr;
assign builder_basesoc_csr_interconnect_we = builder_basesoc_basesoc_we;
assign builder_basesoc_csr_interconnect_dat_w = builder_basesoc_basesoc_dat_w;
assign builder_basesoc_basesoc_dat_r = builder_basesoc_csr_interconnect_dat_r;
assign builder_basesoc_csr_bankarray_interface0_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface1_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface2_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface3_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface4_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface5_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface6_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface7_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface8_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface9_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface10_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface11_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface12_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_sram_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface0_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface1_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface2_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface3_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface4_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface5_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface6_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface7_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface8_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface9_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface10_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface11_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface12_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_sram_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface0_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface1_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface2_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface3_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface4_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface5_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface6_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface7_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface8_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface9_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface10_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface11_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface12_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_sram_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_interconnect_dat_r = (((((((((((((builder_basesoc_csr_bankarray_interface0_bank_bus_dat_r | builder_basesoc_csr_bankarray_interface1_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface2_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface3_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface4_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface5_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface6_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface7_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface8_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface9_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface10_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface11_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface12_bank_bus_dat_r) | builder_basesoc_csr_bankarray_sram_bus_dat_r);
assign sys_clk = clk50;
assign por_clk = clk50;
assign sys_rst = builder_int_rst;
always @(*) begin
	builder_comb_array_muxed0 <= 30'd0;
	case (builder_basesoc_grant)
		1'd0: begin
			builder_comb_array_muxed0 <= __main___ibus_adr;
		end
		default: begin
			builder_comb_array_muxed0 <= __main___dbus_adr;
		end
	endcase
end
always @(*) begin
	builder_comb_array_muxed1 <= 32'd0;
	case (builder_basesoc_grant)
		1'd0: begin
			builder_comb_array_muxed1 <= __main___ibus_dat_w;
		end
		default: begin
			builder_comb_array_muxed1 <= __main___dbus_dat_w;
		end
	endcase
end
always @(*) begin
	builder_comb_array_muxed2 <= 4'd0;
	case (builder_basesoc_grant)
		1'd0: begin
			builder_comb_array_muxed2 <= __main___ibus_sel;
		end
		default: begin
			builder_comb_array_muxed2 <= __main___dbus_sel;
		end
	endcase
end
always @(*) begin
	builder_comb_array_muxed3 <= 1'd0;
	case (builder_basesoc_grant)
		1'd0: begin
			builder_comb_array_muxed3 <= __main___ibus_cyc;
		end
		default: begin
			builder_comb_array_muxed3 <= __main___dbus_cyc;
		end
	endcase
end
always @(*) begin
	builder_comb_array_muxed4 <= 1'd0;
	case (builder_basesoc_grant)
		1'd0: begin
			builder_comb_array_muxed4 <= __main___ibus_stb;
		end
		default: begin
			builder_comb_array_muxed4 <= __main___dbus_stb;
		end
	endcase
end
always @(*) begin
	builder_comb_array_muxed5 <= 1'd0;
	case (builder_basesoc_grant)
		1'd0: begin
			builder_comb_array_muxed5 <= __main___ibus_we;
		end
		default: begin
			builder_comb_array_muxed5 <= __main___dbus_we;
		end
	endcase
end
always @(*) begin
	builder_comb_array_muxed6 <= 3'd0;
	case (builder_basesoc_grant)
		1'd0: begin
			builder_comb_array_muxed6 <= __main___ibus_cti;
		end
		default: begin
			builder_comb_array_muxed6 <= __main___dbus_cti;
		end
	endcase
end
always @(*) begin
	builder_comb_array_muxed7 <= 2'd0;
	case (builder_basesoc_grant)
		1'd0: begin
			builder_comb_array_muxed7 <= __main___ibus_bte;
		end
		default: begin
			builder_comb_array_muxed7 <= __main___dbus_bte;
		end
	endcase
end
always @(*) begin
	builder_sync_array_muxed <= 1'd0;
	case (__main___mosi_sel)
		1'd0: begin
			builder_sync_array_muxed <= __main___mosi_data[0];
		end
		1'd1: begin
			builder_sync_array_muxed <= __main___mosi_data[1];
		end
		2'd2: begin
			builder_sync_array_muxed <= __main___mosi_data[2];
		end
		2'd3: begin
			builder_sync_array_muxed <= __main___mosi_data[3];
		end
		3'd4: begin
			builder_sync_array_muxed <= __main___mosi_data[4];
		end
		3'd5: begin
			builder_sync_array_muxed <= __main___mosi_data[5];
		end
		3'd6: begin
			builder_sync_array_muxed <= __main___mosi_data[6];
		end
		3'd7: begin
			builder_sync_array_muxed <= __main___mosi_data[7];
		end
		4'd8: begin
			builder_sync_array_muxed <= __main___mosi_data[8];
		end
		4'd9: begin
			builder_sync_array_muxed <= __main___mosi_data[9];
		end
		4'd10: begin
			builder_sync_array_muxed <= __main___mosi_data[10];
		end
		4'd11: begin
			builder_sync_array_muxed <= __main___mosi_data[11];
		end
		4'd12: begin
			builder_sync_array_muxed <= __main___mosi_data[12];
		end
		4'd13: begin
			builder_sync_array_muxed <= __main___mosi_data[13];
		end
		4'd14: begin
			builder_sync_array_muxed <= __main___mosi_data[14];
		end
		default: begin
			builder_sync_array_muxed <= __main___mosi_data[15];
		end
	endcase
end
assign __main___rx_rx = builder_multiregimpl0_regs1;
assign __main___switches_status = builder_multiregimpl1_regs1;
assign __main___buttons_status = builder_multiregimpl2_regs1;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge por_clk) begin
	builder_int_rst <= 1'd0;
end

always @(posedge sys_clk) begin
	if ((__main___bus_errors != 32'd4294967295)) begin
		if (__main___bus_error) begin
			__main___bus_errors <= (__main___bus_errors + 1'd1);
		end
	end
	__main___ram_bus_ack <= 1'd0;
	if (((__main___ram_bus_cyc & __main___ram_bus_stb) & (~__main___ram_bus_ack))) begin
		__main___ram_bus_ack <= 1'd1;
	end
	__main___interface0_ram_bus_ack <= 1'd0;
	if (((__main___interface0_ram_bus_cyc & __main___interface0_ram_bus_stb) & (~__main___interface0_ram_bus_ack))) begin
		__main___interface0_ram_bus_ack <= 1'd1;
	end
	__main___interface1_ram_bus_ack <= 1'd0;
	if (((__main___interface1_ram_bus_cyc & __main___interface1_ram_bus_stb) & (~__main___interface1_ram_bus_ack))) begin
		__main___interface1_ram_bus_ack <= 1'd1;
	end
	{__main___tx_tick, __main___tx_phase} <= 24'd9895604;
	if (__main___tx_enable) begin
		{__main___tx_tick, __main___tx_phase} <= (__main___tx_phase + 24'd9895604);
	end
	builder_subfragments_rs232phytx_state <= builder_subfragments_rs232phytx_next_state;
	if (__main___tx_count_rs232phytx_next_value_ce0) begin
		__main___tx_count <= __main___tx_count_rs232phytx_next_value0;
	end
	if (__main___serial_tx_rs232phytx_next_value_ce1) begin
		serial_tx <= __main___serial_tx_rs232phytx_next_value1;
	end
	if (__main___tx_data_rs232phytx_next_value_ce2) begin
		__main___tx_data <= __main___tx_data_rs232phytx_next_value2;
	end
	__main___rx_rx_d <= __main___rx_rx;
	{__main___rx_tick, __main___rx_phase} <= 32'd2147483648;
	if (__main___rx_enable) begin
		{__main___rx_tick, __main___rx_phase} <= (__main___rx_phase + 24'd9895604);
	end
	builder_subfragments_rs232phyrx_state <= builder_subfragments_rs232phyrx_next_state;
	if (__main___rx_count_rs232phyrx_next_value_ce0) begin
		__main___rx_count <= __main___rx_count_rs232phyrx_next_value0;
	end
	if (__main___rx_data_rs232phyrx_next_value_ce1) begin
		__main___rx_data <= __main___rx_data_rs232phyrx_next_value1;
	end
	if (__main___uart_tx_clear) begin
		__main___uart_tx_pending <= 1'd0;
	end
	__main___uart_tx_trigger_d <= __main___uart_tx_trigger;
	if ((__main___uart_tx_trigger & (~__main___uart_tx_trigger_d))) begin
		__main___uart_tx_pending <= 1'd1;
	end
	if (__main___uart_rx_clear) begin
		__main___uart_rx_pending <= 1'd0;
	end
	__main___uart_rx_trigger_d <= __main___uart_rx_trigger;
	if ((__main___uart_rx_trigger & (~__main___uart_rx_trigger_d))) begin
		__main___uart_rx_pending <= 1'd1;
	end
	if (__main___uart_tx_fifo_syncfifo_re) begin
		__main___uart_tx_fifo_readable <= 1'd1;
	end else begin
		if (__main___uart_tx_fifo_re) begin
			__main___uart_tx_fifo_readable <= 1'd0;
		end
	end
	if (((__main___uart_tx_fifo_syncfifo_we & __main___uart_tx_fifo_syncfifo_writable) & (~__main___uart_tx_fifo_replace))) begin
		__main___uart_tx_fifo_produce <= (__main___uart_tx_fifo_produce + 1'd1);
	end
	if (__main___uart_tx_fifo_do_read) begin
		__main___uart_tx_fifo_consume <= (__main___uart_tx_fifo_consume + 1'd1);
	end
	if (((__main___uart_tx_fifo_syncfifo_we & __main___uart_tx_fifo_syncfifo_writable) & (~__main___uart_tx_fifo_replace))) begin
		if ((~__main___uart_tx_fifo_do_read)) begin
			__main___uart_tx_fifo_level0 <= (__main___uart_tx_fifo_level0 + 1'd1);
		end
	end else begin
		if (__main___uart_tx_fifo_do_read) begin
			__main___uart_tx_fifo_level0 <= (__main___uart_tx_fifo_level0 - 1'd1);
		end
	end
	if (__main___uart_rx_fifo_syncfifo_re) begin
		__main___uart_rx_fifo_readable <= 1'd1;
	end else begin
		if (__main___uart_rx_fifo_re) begin
			__main___uart_rx_fifo_readable <= 1'd0;
		end
	end
	if (((__main___uart_rx_fifo_syncfifo_we & __main___uart_rx_fifo_syncfifo_writable) & (~__main___uart_rx_fifo_replace))) begin
		__main___uart_rx_fifo_produce <= (__main___uart_rx_fifo_produce + 1'd1);
	end
	if (__main___uart_rx_fifo_do_read) begin
		__main___uart_rx_fifo_consume <= (__main___uart_rx_fifo_consume + 1'd1);
	end
	if (((__main___uart_rx_fifo_syncfifo_we & __main___uart_rx_fifo_syncfifo_writable) & (~__main___uart_rx_fifo_replace))) begin
		if ((~__main___uart_rx_fifo_do_read)) begin
			__main___uart_rx_fifo_level0 <= (__main___uart_rx_fifo_level0 + 1'd1);
		end
	end else begin
		if (__main___uart_rx_fifo_do_read) begin
			__main___uart_rx_fifo_level0 <= (__main___uart_rx_fifo_level0 - 1'd1);
		end
	end
	if (__main___timer_en_storage) begin
		if ((__main___timer_value == 1'd0)) begin
			__main___timer_value <= __main___timer_reload_storage;
		end else begin
			__main___timer_value <= (__main___timer_value - 1'd1);
		end
	end else begin
		__main___timer_value <= __main___timer_load_storage;
	end
	if (__main___timer_update_value_re) begin
		__main___timer_value_status <= __main___timer_value;
	end
	if (__main___timer_zero_clear) begin
		__main___timer_zero_pending <= 1'd0;
	end
	__main___timer_zero_trigger_d <= __main___timer_zero_trigger;
	if ((__main___timer_zero_trigger & (~__main___timer_zero_trigger_d))) begin
		__main___timer_zero_pending <= 1'd1;
	end
	__main___clk_divider1 <= (__main___clk_divider1 + 1'd1);
	if (__main___clk_rise) begin
		acc_spi_clk <= __main___clk_enable;
	end else begin
		if (__main___clk_fall) begin
			__main___clk_divider1 <= 1'd0;
			acc_spi_clk <= 1'd0;
		end
	end
	acc_spi_cs_n <= (~(__main___cs & (__main___xfer_enable | (__main___cs_mode == 1'd1))));
	if (__main___mosi_latch) begin
		__main___mosi_data <= __main___mosi;
		__main___mosi_sel <= 4'd15;
	end else begin
		if (__main___clk_fall) begin
			if (__main___xfer_enable) begin
				acc_spi_mosi <= builder_sync_array_muxed;
			end
			__main___mosi_sel <= (__main___mosi_sel - 1'd1);
		end
	end
	if (__main___clk_rise) begin
		if (__main___loopback) begin
			__main___miso_data <= {__main___miso_data, acc_spi_mosi};
		end else begin
			__main___miso_data <= {__main___miso_data, acc_spi_miso};
		end
	end
	if (__main___miso_latch) begin
		__main___miso <= __main___miso_data;
	end
	builder_subfragments_state <= builder_subfragments_next_state;
	if (__main___count_next_value_ce) begin
		__main___count <= __main___count_next_value;
	end
	if (__main___display1_write_re) begin
		__main___display1_value <= __main___display1_storage;
	end
	if (__main___display2_write_re) begin
		__main___display2_value <= __main___display2_storage;
	end
	if (__main___display3_write_re) begin
		__main___display3_value <= __main___display3_storage;
	end
	if (__main___display4_write_re) begin
		__main___display4_value <= __main___display4_storage;
	end
	if (__main___display5_write_re) begin
		__main___display5_value <= __main___display5_storage;
	end
	if (__main___display6_write_re) begin
		__main___display6_value <= __main___display6_storage;
	end
	builder_basesoc_state <= builder_basesoc_next_state;
	case (builder_basesoc_grant)
		1'd0: begin
			if ((~builder_basesoc_request[0])) begin
				if (builder_basesoc_request[1]) begin
					builder_basesoc_grant <= 1'd1;
				end
			end
		end
		1'd1: begin
			if ((~builder_basesoc_request[1])) begin
				if (builder_basesoc_request[0]) begin
					builder_basesoc_grant <= 1'd0;
				end
			end
		end
	endcase
	builder_basesoc_slave_sel_r <= builder_basesoc_slave_sel;
	if (builder_basesoc_wait) begin
		if ((~builder_basesoc_done)) begin
			builder_basesoc_count <= (builder_basesoc_count - 1'd1);
		end
	end else begin
		builder_basesoc_count <= 20'd1000000;
	end
	builder_basesoc_csr_bankarray_interface0_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank0_sel) begin
		case (builder_basesoc_csr_bankarray_interface0_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface0_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank0_control0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface0_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank0_status_w;
			end
			2'd2: begin
				builder_basesoc_csr_bankarray_interface0_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank0_mosi0_w;
			end
			2'd3: begin
				builder_basesoc_csr_bankarray_interface0_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank0_miso_w;
			end
			3'd4: begin
				builder_basesoc_csr_bankarray_interface0_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank0_cs0_w;
			end
			3'd5: begin
				builder_basesoc_csr_bankarray_interface0_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank0_loopback0_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank0_control0_re) begin
		__main___control_storage[15:0] <= builder_basesoc_csr_bankarray_csrbank0_control0_r;
	end
	__main___control_re <= builder_basesoc_csr_bankarray_csrbank0_control0_re;
	__main___status_re <= builder_basesoc_csr_bankarray_csrbank0_status_re;
	if (builder_basesoc_csr_bankarray_csrbank0_mosi0_re) begin
		__main___mosi_storage[15:0] <= builder_basesoc_csr_bankarray_csrbank0_mosi0_r;
	end
	__main___mosi_re <= builder_basesoc_csr_bankarray_csrbank0_mosi0_re;
	__main___miso_re <= builder_basesoc_csr_bankarray_csrbank0_miso_re;
	if (builder_basesoc_csr_bankarray_csrbank0_cs0_re) begin
		__main___cs_storage[16:0] <= builder_basesoc_csr_bankarray_csrbank0_cs0_r;
	end
	__main___cs_re <= builder_basesoc_csr_bankarray_csrbank0_cs0_re;
	if (builder_basesoc_csr_bankarray_csrbank0_loopback0_re) begin
		__main___loopback_storage <= builder_basesoc_csr_bankarray_csrbank0_loopback0_r;
	end
	__main___loopback_re <= builder_basesoc_csr_bankarray_csrbank0_loopback0_re;
	builder_basesoc_csr_bankarray_interface1_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank1_sel) begin
		case (builder_basesoc_csr_bankarray_interface1_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface1_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank1_in_w;
			end
		endcase
	end
	__main___buttons_re <= builder_basesoc_csr_bankarray_csrbank1_in_re;
	builder_basesoc_csr_bankarray_interface2_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank2_sel) begin
		case (builder_basesoc_csr_bankarray_interface2_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface2_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank2_reset0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface2_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank2_scratch0_w;
			end
			2'd2: begin
				builder_basesoc_csr_bankarray_interface2_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank2_bus_errors_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank2_reset0_re) begin
		__main___reset_storage[1:0] <= builder_basesoc_csr_bankarray_csrbank2_reset0_r;
	end
	__main___reset_re <= builder_basesoc_csr_bankarray_csrbank2_reset0_re;
	if (builder_basesoc_csr_bankarray_csrbank2_scratch0_re) begin
		__main___scratch_storage[31:0] <= builder_basesoc_csr_bankarray_csrbank2_scratch0_r;
	end
	__main___scratch_re <= builder_basesoc_csr_bankarray_csrbank2_scratch0_re;
	__main___bus_errors_re <= builder_basesoc_csr_bankarray_csrbank2_bus_errors_re;
	builder_basesoc_csr_bankarray_interface3_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank3_sel) begin
		case (builder_basesoc_csr_bankarray_interface3_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface3_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank3_value0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface3_bank_bus_dat_r <= __main___display1_write_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank3_value0_re) begin
		__main___display1_storage[3:0] <= builder_basesoc_csr_bankarray_csrbank3_value0_r;
	end
	__main___display1_re <= builder_basesoc_csr_bankarray_csrbank3_value0_re;
	builder_basesoc_csr_bankarray_interface4_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank4_sel) begin
		case (builder_basesoc_csr_bankarray_interface4_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface4_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank4_value0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface4_bank_bus_dat_r <= __main___display2_write_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank4_value0_re) begin
		__main___display2_storage[3:0] <= builder_basesoc_csr_bankarray_csrbank4_value0_r;
	end
	__main___display2_re <= builder_basesoc_csr_bankarray_csrbank4_value0_re;
	builder_basesoc_csr_bankarray_interface5_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank5_sel) begin
		case (builder_basesoc_csr_bankarray_interface5_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface5_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank5_value0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface5_bank_bus_dat_r <= __main___display3_write_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank5_value0_re) begin
		__main___display3_storage[3:0] <= builder_basesoc_csr_bankarray_csrbank5_value0_r;
	end
	__main___display3_re <= builder_basesoc_csr_bankarray_csrbank5_value0_re;
	builder_basesoc_csr_bankarray_interface6_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank6_sel) begin
		case (builder_basesoc_csr_bankarray_interface6_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface6_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank6_value0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface6_bank_bus_dat_r <= __main___display4_write_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank6_value0_re) begin
		__main___display4_storage[3:0] <= builder_basesoc_csr_bankarray_csrbank6_value0_r;
	end
	__main___display4_re <= builder_basesoc_csr_bankarray_csrbank6_value0_re;
	builder_basesoc_csr_bankarray_interface7_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank7_sel) begin
		case (builder_basesoc_csr_bankarray_interface7_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface7_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank7_value0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface7_bank_bus_dat_r <= __main___display5_write_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank7_value0_re) begin
		__main___display5_storage[3:0] <= builder_basesoc_csr_bankarray_csrbank7_value0_r;
	end
	__main___display5_re <= builder_basesoc_csr_bankarray_csrbank7_value0_re;
	builder_basesoc_csr_bankarray_interface8_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank8_sel) begin
		case (builder_basesoc_csr_bankarray_interface8_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface8_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank8_value0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface8_bank_bus_dat_r <= __main___display6_write_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank8_value0_re) begin
		__main___display6_storage[3:0] <= builder_basesoc_csr_bankarray_csrbank8_value0_r;
	end
	__main___display6_re <= builder_basesoc_csr_bankarray_csrbank8_value0_re;
	builder_basesoc_csr_bankarray_sel_r <= builder_basesoc_csr_bankarray_sel;
	builder_basesoc_csr_bankarray_interface9_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank9_sel) begin
		case (builder_basesoc_csr_bankarray_interface9_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface9_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank9_out0_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank9_out0_re) begin
		__main___leds_storage[8:0] <= builder_basesoc_csr_bankarray_csrbank9_out0_r;
	end
	__main___leds_re <= builder_basesoc_csr_bankarray_csrbank9_out0_re;
	builder_basesoc_csr_bankarray_interface10_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank10_sel) begin
		case (builder_basesoc_csr_bankarray_interface10_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface10_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank10_in_w;
			end
		endcase
	end
	__main___switches_re <= builder_basesoc_csr_bankarray_csrbank10_in_re;
	builder_basesoc_csr_bankarray_interface11_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank11_sel) begin
		case (builder_basesoc_csr_bankarray_interface11_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface11_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank11_load0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface11_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank11_reload0_w;
			end
			2'd2: begin
				builder_basesoc_csr_bankarray_interface11_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank11_en0_w;
			end
			2'd3: begin
				builder_basesoc_csr_bankarray_interface11_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank11_update_value0_w;
			end
			3'd4: begin
				builder_basesoc_csr_bankarray_interface11_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank11_value_w;
			end
			3'd5: begin
				builder_basesoc_csr_bankarray_interface11_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank11_ev_status_w;
			end
			3'd6: begin
				builder_basesoc_csr_bankarray_interface11_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank11_ev_pending_w;
			end
			3'd7: begin
				builder_basesoc_csr_bankarray_interface11_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank11_ev_enable0_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank11_load0_re) begin
		__main___timer_load_storage[31:0] <= builder_basesoc_csr_bankarray_csrbank11_load0_r;
	end
	__main___timer_load_re <= builder_basesoc_csr_bankarray_csrbank11_load0_re;
	if (builder_basesoc_csr_bankarray_csrbank11_reload0_re) begin
		__main___timer_reload_storage[31:0] <= builder_basesoc_csr_bankarray_csrbank11_reload0_r;
	end
	__main___timer_reload_re <= builder_basesoc_csr_bankarray_csrbank11_reload0_re;
	if (builder_basesoc_csr_bankarray_csrbank11_en0_re) begin
		__main___timer_en_storage <= builder_basesoc_csr_bankarray_csrbank11_en0_r;
	end
	__main___timer_en_re <= builder_basesoc_csr_bankarray_csrbank11_en0_re;
	if (builder_basesoc_csr_bankarray_csrbank11_update_value0_re) begin
		__main___timer_update_value_storage <= builder_basesoc_csr_bankarray_csrbank11_update_value0_r;
	end
	__main___timer_update_value_re <= builder_basesoc_csr_bankarray_csrbank11_update_value0_re;
	__main___timer_value_re <= builder_basesoc_csr_bankarray_csrbank11_value_re;
	__main___timer_status_re <= builder_basesoc_csr_bankarray_csrbank11_ev_status_re;
	if (builder_basesoc_csr_bankarray_csrbank11_ev_pending_re) begin
		__main___timer_pending_r <= builder_basesoc_csr_bankarray_csrbank11_ev_pending_r;
	end
	__main___timer_pending_re <= builder_basesoc_csr_bankarray_csrbank11_ev_pending_re;
	if (builder_basesoc_csr_bankarray_csrbank11_ev_enable0_re) begin
		__main___timer_enable_storage <= builder_basesoc_csr_bankarray_csrbank11_ev_enable0_r;
	end
	__main___timer_enable_re <= builder_basesoc_csr_bankarray_csrbank11_ev_enable0_re;
	builder_basesoc_csr_bankarray_interface12_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank12_sel) begin
		case (builder_basesoc_csr_bankarray_interface12_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface12_bank_bus_dat_r <= __main___uart_rxtx_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface12_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank12_txfull_w;
			end
			2'd2: begin
				builder_basesoc_csr_bankarray_interface12_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank12_rxempty_w;
			end
			2'd3: begin
				builder_basesoc_csr_bankarray_interface12_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank12_ev_status_w;
			end
			3'd4: begin
				builder_basesoc_csr_bankarray_interface12_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank12_ev_pending_w;
			end
			3'd5: begin
				builder_basesoc_csr_bankarray_interface12_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank12_ev_enable0_w;
			end
			3'd6: begin
				builder_basesoc_csr_bankarray_interface12_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank12_txempty_w;
			end
			3'd7: begin
				builder_basesoc_csr_bankarray_interface12_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank12_rxfull_w;
			end
		endcase
	end
	__main___uart_txfull_re <= builder_basesoc_csr_bankarray_csrbank12_txfull_re;
	__main___uart_rxempty_re <= builder_basesoc_csr_bankarray_csrbank12_rxempty_re;
	__main___uart_status_re <= builder_basesoc_csr_bankarray_csrbank12_ev_status_re;
	if (builder_basesoc_csr_bankarray_csrbank12_ev_pending_re) begin
		__main___uart_pending_r[1:0] <= builder_basesoc_csr_bankarray_csrbank12_ev_pending_r;
	end
	__main___uart_pending_re <= builder_basesoc_csr_bankarray_csrbank12_ev_pending_re;
	if (builder_basesoc_csr_bankarray_csrbank12_ev_enable0_re) begin
		__main___uart_enable_storage[1:0] <= builder_basesoc_csr_bankarray_csrbank12_ev_enable0_r;
	end
	__main___uart_enable_re <= builder_basesoc_csr_bankarray_csrbank12_ev_enable0_re;
	__main___uart_txempty_re <= builder_basesoc_csr_bankarray_csrbank12_txempty_re;
	__main___uart_rxfull_re <= builder_basesoc_csr_bankarray_csrbank12_rxfull_re;
	if (sys_rst) begin
		__main___reset_storage <= 2'd0;
		__main___reset_re <= 1'd0;
		__main___scratch_storage <= 32'd305419896;
		__main___scratch_re <= 1'd0;
		__main___bus_errors_re <= 1'd0;
		__main___bus_errors <= 32'd0;
		__main___ram_bus_ack <= 1'd0;
		__main___interface0_ram_bus_ack <= 1'd0;
		__main___interface1_ram_bus_ack <= 1'd0;
		serial_tx <= 1'd1;
		__main___tx_tick <= 1'd0;
		__main___rx_tick <= 1'd0;
		__main___rx_rx_d <= 1'd0;
		__main___uart_txfull_re <= 1'd0;
		__main___uart_rxempty_re <= 1'd0;
		__main___uart_tx_pending <= 1'd0;
		__main___uart_tx_trigger_d <= 1'd0;
		__main___uart_rx_pending <= 1'd0;
		__main___uart_rx_trigger_d <= 1'd0;
		__main___uart_status_re <= 1'd0;
		__main___uart_pending_re <= 1'd0;
		__main___uart_pending_r <= 2'd0;
		__main___uart_enable_storage <= 2'd0;
		__main___uart_enable_re <= 1'd0;
		__main___uart_txempty_re <= 1'd0;
		__main___uart_rxfull_re <= 1'd0;
		__main___uart_tx_fifo_readable <= 1'd0;
		__main___uart_tx_fifo_level0 <= 5'd0;
		__main___uart_tx_fifo_produce <= 4'd0;
		__main___uart_tx_fifo_consume <= 4'd0;
		__main___uart_rx_fifo_readable <= 1'd0;
		__main___uart_rx_fifo_level0 <= 5'd0;
		__main___uart_rx_fifo_produce <= 4'd0;
		__main___uart_rx_fifo_consume <= 4'd0;
		__main___timer_load_storage <= 32'd0;
		__main___timer_load_re <= 1'd0;
		__main___timer_reload_storage <= 32'd0;
		__main___timer_reload_re <= 1'd0;
		__main___timer_en_storage <= 1'd0;
		__main___timer_en_re <= 1'd0;
		__main___timer_update_value_storage <= 1'd0;
		__main___timer_update_value_re <= 1'd0;
		__main___timer_value_status <= 32'd0;
		__main___timer_value_re <= 1'd0;
		__main___timer_zero_pending <= 1'd0;
		__main___timer_zero_trigger_d <= 1'd0;
		__main___timer_status_re <= 1'd0;
		__main___timer_pending_re <= 1'd0;
		__main___timer_pending_r <= 1'd0;
		__main___timer_enable_storage <= 1'd0;
		__main___timer_enable_re <= 1'd0;
		__main___timer_value <= 32'd0;
		__main___leds_storage <= 9'd0;
		__main___leds_re <= 1'd0;
		__main___switches_re <= 1'd0;
		__main___buttons_re <= 1'd0;
		acc_spi_mosi <= 1'd0;
		acc_spi_clk <= 1'd0;
		acc_spi_cs_n <= 1'd0;
		__main___miso <= 16'd0;
		__main___control_storage <= 16'd0;
		__main___control_re <= 1'd0;
		__main___status_re <= 1'd0;
		__main___mosi_re <= 1'd0;
		__main___miso_re <= 1'd0;
		__main___cs_storage <= 17'd1;
		__main___cs_re <= 1'd0;
		__main___loopback_storage <= 1'd0;
		__main___loopback_re <= 1'd0;
		__main___count <= 4'd0;
		__main___clk_divider1 <= 16'd0;
		__main___mosi_data <= 16'd0;
		__main___mosi_sel <= 4'd0;
		__main___miso_data <= 16'd0;
		__main___display1_storage <= 4'd0;
		__main___display1_re <= 1'd0;
		__main___display1_value <= 4'd0;
		__main___display2_storage <= 4'd0;
		__main___display2_re <= 1'd0;
		__main___display2_value <= 4'd0;
		__main___display3_storage <= 4'd0;
		__main___display3_re <= 1'd0;
		__main___display3_value <= 4'd0;
		__main___display4_storage <= 4'd0;
		__main___display4_re <= 1'd0;
		__main___display4_value <= 4'd0;
		__main___display5_storage <= 4'd0;
		__main___display5_re <= 1'd0;
		__main___display5_value <= 4'd0;
		__main___display6_storage <= 4'd0;
		__main___display6_re <= 1'd0;
		__main___display6_value <= 4'd0;
		builder_subfragments_rs232phytx_state <= 1'd0;
		builder_subfragments_rs232phyrx_state <= 1'd0;
		builder_subfragments_state <= 2'd0;
		builder_basesoc_grant <= 1'd0;
		builder_basesoc_slave_sel_r <= 4'd0;
		builder_basesoc_count <= 20'd1000000;
		builder_basesoc_csr_bankarray_sel_r <= 1'd0;
		builder_basesoc_state <= 1'd0;
	end
	builder_multiregimpl0_regs0 <= serial_rx;
	builder_multiregimpl0_regs1 <= builder_multiregimpl0_regs0;
	builder_multiregimpl1_regs0 <= {user_sw8, user_sw7, user_sw6, user_sw5, user_sw4, user_sw3, user_sw2, user_sw1, user_sw0};
	builder_multiregimpl1_regs1 <= builder_multiregimpl1_regs0;
	builder_multiregimpl2_regs0 <= {user_btn0};
	builder_multiregimpl2_regs1 <= builder_multiregimpl2_regs0;
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Memory mem: 5184-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [31:0] mem[0:5183];
initial begin
	$readmemh("mem.init", mem);
end
reg [31:0] mem_dat0;
always @(posedge sys_clk) begin
	mem_dat0 <= mem[__main___adr];
end
assign __main___dat_r = mem_dat0;


//------------------------------------------------------------------------------
// Memory mem_1: 2048-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] mem_1[0:2047];
initial begin
	$readmemh("mem_1.init", mem_1);
end
reg [10:0] mem_1_adr0;
always @(posedge sys_clk) begin
	if (__main___sram0_we[0])
		mem_1[__main___sram0_adr][7:0] <= __main___sram0_dat_w[7:0];
	if (__main___sram0_we[1])
		mem_1[__main___sram0_adr][15:8] <= __main___sram0_dat_w[15:8];
	if (__main___sram0_we[2])
		mem_1[__main___sram0_adr][23:16] <= __main___sram0_dat_w[23:16];
	if (__main___sram0_we[3])
		mem_1[__main___sram0_adr][31:24] <= __main___sram0_dat_w[31:24];
	mem_1_adr0 <= __main___sram0_adr;
end
assign __main___sram0_dat_r = mem_1[mem_1_adr0];


//------------------------------------------------------------------------------
// Memory mem_2: 4096-words x 32-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Write-First | Write-Granularity: 8 
reg [31:0] mem_2[0:4095];
initial begin
	$readmemh("mem_2.init", mem_2);
end
reg [11:0] mem_2_adr0;
always @(posedge sys_clk) begin
	if (__main___sram1_we[0])
		mem_2[__main___sram1_adr][7:0] <= __main___sram1_dat_w[7:0];
	if (__main___sram1_we[1])
		mem_2[__main___sram1_adr][15:8] <= __main___sram1_dat_w[15:8];
	if (__main___sram1_we[2])
		mem_2[__main___sram1_adr][23:16] <= __main___sram1_dat_w[23:16];
	if (__main___sram1_we[3])
		mem_2[__main___sram1_adr][31:24] <= __main___sram1_dat_w[31:24];
	mem_2_adr0 <= __main___sram1_adr;
end
assign __main___sram1_dat_r = mem_2[mem_2_adr0];


//------------------------------------------------------------------------------
// Memory mem_3: 39-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [7:0] mem_3[0:38];
initial begin
	$readmemh("mem_3.init", mem_3);
end
reg [5:0] mem_3_adr0;
always @(posedge sys_clk) begin
	mem_3_adr0 <= builder_basesoc_csr_bankarray_adr;
end
assign builder_basesoc_csr_bankarray_dat_r = mem_3[mem_3_adr0];


//------------------------------------------------------------------------------
// Memory storage: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage[0:15];
reg [9:0] storage_dat0;
reg [9:0] storage_dat1;
always @(posedge sys_clk) begin
	if (__main___uart_tx_fifo_wrport_we)
		storage[__main___uart_tx_fifo_wrport_adr] <= __main___uart_tx_fifo_wrport_dat_w;
	storage_dat0 <= storage[__main___uart_tx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (__main___uart_tx_fifo_rdport_re)
		storage_dat1 <= storage[__main___uart_tx_fifo_rdport_adr];
end
assign __main___uart_tx_fifo_wrport_dat_r = storage_dat0;
assign __main___uart_tx_fifo_rdport_dat_r = storage_dat1;


//------------------------------------------------------------------------------
// Memory storage_1: 16-words x 10-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: Sync | Mode: Read-First  | Write-Granularity: 10 
// Port 1 | Read: Sync  | Write: ---- | 
reg [9:0] storage_1[0:15];
reg [9:0] storage_1_dat0;
reg [9:0] storage_1_dat1;
always @(posedge sys_clk) begin
	if (__main___uart_rx_fifo_wrport_we)
		storage_1[__main___uart_rx_fifo_wrport_adr] <= __main___uart_rx_fifo_wrport_dat_w;
	storage_1_dat0 <= storage_1[__main___uart_rx_fifo_wrport_adr];
end
always @(posedge sys_clk) begin
	if (__main___uart_rx_fifo_rdport_re)
		storage_1_dat1 <= storage_1[__main___uart_rx_fifo_rdport_adr];
end
assign __main___uart_rx_fifo_wrport_dat_r = storage_1_dat0;
assign __main___uart_rx_fifo_rdport_dat_r = storage_1_dat1;


VexRiscv VexRiscv(
	.clk(sys_clk),
	.dBusWishbone_ACK(__main___dbus_ack),
	.dBusWishbone_DAT_MISO(__main___dbus_dat_r),
	.dBusWishbone_ERR(__main___dbus_err),
	.externalInterruptArray(__main___interrupt),
	.externalResetVector(__main___vexriscv),
	.iBusWishbone_ACK(__main___ibus_ack),
	.iBusWishbone_DAT_MISO(__main___ibus_dat_r),
	.iBusWishbone_ERR(__main___ibus_err),
	.reset((sys_rst | __main___reset)),
	.softwareInterrupt(1'd0),
	.timerInterrupt(1'd0),
	.dBusWishbone_ADR(__main___dbus_adr),
	.dBusWishbone_BTE(__main___dbus_bte),
	.dBusWishbone_CTI(__main___dbus_cti),
	.dBusWishbone_CYC(__main___dbus_cyc),
	.dBusWishbone_DAT_MOSI(__main___dbus_dat_w),
	.dBusWishbone_SEL(__main___dbus_sel),
	.dBusWishbone_STB(__main___dbus_stb),
	.dBusWishbone_WE(__main___dbus_we),
	.iBusWishbone_ADR(__main___ibus_adr),
	.iBusWishbone_BTE(__main___ibus_bte),
	.iBusWishbone_CTI(__main___ibus_cti),
	.iBusWishbone_CYC(__main___ibus_cyc),
	.iBusWishbone_DAT_MOSI(__main___ibus_dat_w),
	.iBusWishbone_SEL(__main___ibus_sel),
	.iBusWishbone_STB(__main___ibus_stb),
	.iBusWishbone_WE(__main___ibus_we)
);

endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2022-03-15 18:44:59.
//------------------------------------------------------------------------------
