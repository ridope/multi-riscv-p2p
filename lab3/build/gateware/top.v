// -----------------------------------------------------------------------------
// Auto-Generated by:        __   _ __      _  __
//                          / /  (_) /____ | |/_/
//                         / /__/ / __/ -_)>  <
//                        /____/_/\__/\__/_/|_|
//                     Build your hardware, easily!
//                   https://github.com/enjoy-digital/litex
//
// Filename   : top.v
// Device     : 10M50DAF484C7G
// LiteX sha1 : 3fde2512
// Date       : 2022-03-15 18:37:21
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Module
//------------------------------------------------------------------------------

module top (
	output reg  serial_tx,
	input  wire serial_rx,
	output wire user_led0,
	output wire user_led1,
	output wire user_led2,
	output wire user_led3,
	output wire user_led4,
	output wire user_led5,
	output wire user_led6,
	output wire user_led7,
	output wire user_led8,
	input  wire user_sw0,
	input  wire user_sw1,
	input  wire user_sw2,
	input  wire user_sw3,
	input  wire user_sw4,
	input  wire user_sw5,
	input  wire user_sw6,
	input  wire user_sw7,
	input  wire user_sw8,
	input  wire user_btn0,
	output wire [7:0] display_1,
	output wire [7:0] display_2,
	output wire [7:0] display_3,
	output wire [7:0] display_4,
	output wire [7:0] display_5,
	output wire [7:0] display_6,
	input  wire clk50
);


//------------------------------------------------------------------------------
// Signals
//------------------------------------------------------------------------------

reg  __main___soc_rst = 1'd0;
wire __main___cpu_rst;
reg  [1:0] __main___reset_storage = 2'd0;
reg  __main___reset_re = 1'd0;
reg  [31:0] __main___scratch_storage = 32'd305419896;
reg  __main___scratch_re = 1'd0;
wire [31:0] __main___bus_errors_status;
wire __main___bus_errors_we;
reg  __main___bus_errors_re = 1'd0;
reg  __main___bus_error = 1'd0;
reg  [31:0] __main___bus_errors = 32'd0;
reg  __main___tx_sink_valid = 1'd0;
reg  __main___tx_sink_ready = 1'd0;
wire __main___tx_sink_last;
reg  [7:0] __main___tx_sink_payload_data = 8'd0;
reg  [7:0] __main___tx_data = 8'd0;
reg  [3:0] __main___tx_count = 4'd0;
reg  __main___tx_enable = 1'd0;
reg  __main___tx_tick = 1'd0;
reg  [31:0] __main___tx_phase = 32'd0;
reg  __main___rx_source_valid = 1'd0;
reg  __main___rx_source_ready = 1'd0;
reg  [7:0] __main___rx_source_payload_data = 8'd0;
reg  [7:0] __main___rx_data = 8'd0;
reg  [3:0] __main___rx_count = 4'd0;
reg  __main___rx_enable = 1'd0;
reg  __main___rx_tick = 1'd0;
reg  [31:0] __main___rx_phase = 32'd0;
wire __main___rx_rx;
reg  __main___rx_rx_d = 1'd0;
wire [29:0] __main___wishbone_adr;
wire [31:0] __main___wishbone_dat_w;
wire [31:0] __main___wishbone_dat_r;
wire [3:0] __main___wishbone_sel;
reg  __main___wishbone_cyc = 1'd0;
reg  __main___wishbone_stb = 1'd0;
wire __main___wishbone_ack;
reg  __main___wishbone_we = 1'd0;
reg  [2:0] __main___wishbone_cti = 3'd0;
reg  [1:0] __main___wishbone_bte = 2'd0;
wire __main___wishbone_err;
reg  [7:0] __main___cmd = 8'd0;
reg  __main___incr = 1'd0;
reg  [7:0] __main___length = 8'd0;
reg  [31:0] __main___address = 32'd0;
reg  [31:0] __main___data = 32'd0;
reg  [1:0] __main___bytes_count = 2'd0;
reg  [7:0] __main___words_count = 8'd0;
wire __main___reset;
wire __main___wait;
wire __main___done;
reg  [22:0] __main___count = 23'd5000000;
reg  __main___is_ongoing = 1'd0;
reg  [8:0] __main___leds_storage = 9'd0;
reg  __main___leds_re = 1'd0;
wire [8:0] __main___switches_status;
wire __main___switches_we;
reg  __main___switches_re = 1'd0;
wire __main___buttons_status;
wire __main___buttons_we;
reg  __main___buttons_re = 1'd0;
reg  [3:0] __main___display1_storage = 4'd0;
reg  __main___display1_re = 1'd0;
reg  __main___display1_write_re = 1'd0;
wire __main___display1_write_r;
reg  __main___display1_write_we = 1'd0;
reg  __main___display1_write_w = 1'd0;
wire [6:0] __main___display1_abcdefg0;
reg  [3:0] __main___display1_value = 4'd0;
reg  [6:0] __main___display1_abcdefg1 = 7'd0;
reg  [3:0] __main___display2_storage = 4'd0;
reg  __main___display2_re = 1'd0;
reg  __main___display2_write_re = 1'd0;
wire __main___display2_write_r;
reg  __main___display2_write_we = 1'd0;
reg  __main___display2_write_w = 1'd0;
wire [6:0] __main___display2_abcdefg0;
reg  [3:0] __main___display2_value = 4'd0;
reg  [6:0] __main___display2_abcdefg1 = 7'd0;
reg  [3:0] __main___display3_storage = 4'd0;
reg  __main___display3_re = 1'd0;
reg  __main___display3_write_re = 1'd0;
wire __main___display3_write_r;
reg  __main___display3_write_we = 1'd0;
reg  __main___display3_write_w = 1'd0;
wire [6:0] __main___display3_abcdefg0;
reg  [3:0] __main___display3_value = 4'd0;
reg  [6:0] __main___display3_abcdefg1 = 7'd0;
reg  [3:0] __main___display4_storage = 4'd0;
reg  __main___display4_re = 1'd0;
reg  __main___display4_write_re = 1'd0;
wire __main___display4_write_r;
reg  __main___display4_write_we = 1'd0;
reg  __main___display4_write_w = 1'd0;
wire [6:0] __main___display4_abcdefg0;
reg  [3:0] __main___display4_value = 4'd0;
reg  [6:0] __main___display4_abcdefg1 = 7'd0;
reg  [3:0] __main___display5_storage = 4'd0;
reg  __main___display5_re = 1'd0;
reg  __main___display5_write_re = 1'd0;
wire __main___display5_write_r;
reg  __main___display5_write_we = 1'd0;
reg  __main___display5_write_w = 1'd0;
wire [6:0] __main___display5_abcdefg0;
reg  [3:0] __main___display5_value = 4'd0;
reg  [6:0] __main___display5_abcdefg1 = 7'd0;
reg  [3:0] __main___display6_storage = 4'd0;
reg  __main___display6_re = 1'd0;
reg  __main___display6_write_re = 1'd0;
wire __main___display6_write_r;
reg  __main___display6_write_we = 1'd0;
reg  __main___display6_write_w = 1'd0;
wire [6:0] __main___display6_abcdefg0;
reg  [3:0] __main___display6_value = 4'd0;
reg  [6:0] __main___display6_abcdefg1 = 7'd0;
reg  builder_subfragments_rs232phytx_state = 1'd0;
reg  builder_subfragments_rs232phytx_next_state = 1'd0;
reg  [3:0] __main___tx_count_rs232phytx_next_value0 = 4'd0;
reg  __main___tx_count_rs232phytx_next_value_ce0 = 1'd0;
reg  __main___obj_serial_tx_rs232phytx_next_value1 = 1'd0;
reg  __main___obj_serial_tx_rs232phytx_next_value_ce1 = 1'd0;
reg  [7:0] __main___tx_data_rs232phytx_next_value2 = 8'd0;
reg  __main___tx_data_rs232phytx_next_value_ce2 = 1'd0;
reg  builder_subfragments_rs232phyrx_state = 1'd0;
reg  builder_subfragments_rs232phyrx_next_state = 1'd0;
reg  [3:0] __main___rx_count_rs232phyrx_next_value0 = 4'd0;
reg  __main___rx_count_rs232phyrx_next_value_ce0 = 1'd0;
reg  [7:0] __main___rx_data_rs232phyrx_next_value1 = 8'd0;
reg  __main___rx_data_rs232phyrx_next_value_ce1 = 1'd0;
reg  [2:0] builder_subfragments_state = 3'd0;
reg  [2:0] builder_subfragments_next_state = 3'd0;
reg  [1:0] __main___bytes_count_next_value0 = 2'd0;
reg  __main___bytes_count_next_value_ce0 = 1'd0;
reg  [7:0] __main___words_count_next_value1 = 8'd0;
reg  __main___words_count_next_value_ce1 = 1'd0;
reg  [7:0] __main___cmd_next_value2 = 8'd0;
reg  __main___cmd_next_value_ce2 = 1'd0;
reg  [7:0] __main___length_next_value3 = 8'd0;
reg  __main___length_next_value_ce3 = 1'd0;
reg  [31:0] __main___address_next_value4 = 32'd0;
reg  __main___address_next_value_ce4 = 1'd0;
reg  __main___incr_next_value5 = 1'd0;
reg  __main___incr_next_value_ce5 = 1'd0;
reg  [31:0] __main___data_next_value6 = 32'd0;
reg  __main___data_next_value_ce6 = 1'd0;
reg  [13:0] builder_basesoc_basesoc_adr = 14'd0;
reg  builder_basesoc_basesoc_we = 1'd0;
reg  [31:0] builder_basesoc_basesoc_dat_w = 32'd0;
wire [31:0] builder_basesoc_basesoc_dat_r;
wire [29:0] builder_basesoc_basesoc_wishbone_adr;
wire [31:0] builder_basesoc_basesoc_wishbone_dat_w;
reg  [31:0] builder_basesoc_basesoc_wishbone_dat_r = 32'd0;
wire [3:0] builder_basesoc_basesoc_wishbone_sel;
wire builder_basesoc_basesoc_wishbone_cyc;
wire builder_basesoc_basesoc_wishbone_stb;
reg  builder_basesoc_basesoc_wishbone_ack = 1'd0;
wire builder_basesoc_basesoc_wishbone_we;
wire [2:0] builder_basesoc_basesoc_wishbone_cti;
wire [1:0] builder_basesoc_basesoc_wishbone_bte;
reg  builder_basesoc_basesoc_wishbone_err = 1'd0;
wire [13:0] builder_basesoc_csr_bankarray_interface0_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface0_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface0_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface0_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank0_in_re = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank0_in_r;
reg  builder_basesoc_csr_bankarray_csrbank0_in_we = 1'd0;
wire builder_basesoc_csr_bankarray_csrbank0_in_w;
wire builder_basesoc_csr_bankarray_csrbank0_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface1_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface1_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface1_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface1_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank1_reset0_re = 1'd0;
wire [1:0] builder_basesoc_csr_bankarray_csrbank1_reset0_r;
reg  builder_basesoc_csr_bankarray_csrbank1_reset0_we = 1'd0;
wire [1:0] builder_basesoc_csr_bankarray_csrbank1_reset0_w;
reg  builder_basesoc_csr_bankarray_csrbank1_scratch0_re = 1'd0;
wire [31:0] builder_basesoc_csr_bankarray_csrbank1_scratch0_r;
reg  builder_basesoc_csr_bankarray_csrbank1_scratch0_we = 1'd0;
wire [31:0] builder_basesoc_csr_bankarray_csrbank1_scratch0_w;
reg  builder_basesoc_csr_bankarray_csrbank1_bus_errors_re = 1'd0;
wire [31:0] builder_basesoc_csr_bankarray_csrbank1_bus_errors_r;
reg  builder_basesoc_csr_bankarray_csrbank1_bus_errors_we = 1'd0;
wire [31:0] builder_basesoc_csr_bankarray_csrbank1_bus_errors_w;
wire builder_basesoc_csr_bankarray_csrbank1_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface2_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface2_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface2_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface2_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank2_value0_re = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank2_value0_r;
reg  builder_basesoc_csr_bankarray_csrbank2_value0_we = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank2_value0_w;
wire builder_basesoc_csr_bankarray_csrbank2_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface3_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface3_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface3_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface3_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank3_value0_re = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank3_value0_r;
reg  builder_basesoc_csr_bankarray_csrbank3_value0_we = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank3_value0_w;
wire builder_basesoc_csr_bankarray_csrbank3_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface4_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface4_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface4_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface4_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank4_value0_re = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank4_value0_r;
reg  builder_basesoc_csr_bankarray_csrbank4_value0_we = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank4_value0_w;
wire builder_basesoc_csr_bankarray_csrbank4_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface5_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface5_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface5_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface5_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank5_value0_re = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank5_value0_r;
reg  builder_basesoc_csr_bankarray_csrbank5_value0_we = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank5_value0_w;
wire builder_basesoc_csr_bankarray_csrbank5_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface6_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface6_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface6_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface6_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank6_value0_re = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank6_value0_r;
reg  builder_basesoc_csr_bankarray_csrbank6_value0_we = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank6_value0_w;
wire builder_basesoc_csr_bankarray_csrbank6_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface7_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface7_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface7_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface7_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank7_value0_re = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank7_value0_r;
reg  builder_basesoc_csr_bankarray_csrbank7_value0_we = 1'd0;
wire [3:0] builder_basesoc_csr_bankarray_csrbank7_value0_w;
wire builder_basesoc_csr_bankarray_csrbank7_sel;
wire [13:0] builder_basesoc_csr_bankarray_sram_bus_adr;
wire builder_basesoc_csr_bankarray_sram_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_sram_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_sram_bus_dat_r = 32'd0;
wire [5:0] builder_basesoc_csr_bankarray_adr;
wire [7:0] builder_basesoc_csr_bankarray_dat_r;
wire builder_basesoc_csr_bankarray_sel;
reg  builder_basesoc_csr_bankarray_sel_r = 1'd0;
wire [13:0] builder_basesoc_csr_bankarray_interface8_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface8_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface8_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface8_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank8_out0_re = 1'd0;
wire [8:0] builder_basesoc_csr_bankarray_csrbank8_out0_r;
reg  builder_basesoc_csr_bankarray_csrbank8_out0_we = 1'd0;
wire [8:0] builder_basesoc_csr_bankarray_csrbank8_out0_w;
wire builder_basesoc_csr_bankarray_csrbank8_sel;
wire [13:0] builder_basesoc_csr_bankarray_interface9_bank_bus_adr;
wire builder_basesoc_csr_bankarray_interface9_bank_bus_we;
wire [31:0] builder_basesoc_csr_bankarray_interface9_bank_bus_dat_w;
reg  [31:0] builder_basesoc_csr_bankarray_interface9_bank_bus_dat_r = 32'd0;
reg  builder_basesoc_csr_bankarray_csrbank9_in_re = 1'd0;
wire [8:0] builder_basesoc_csr_bankarray_csrbank9_in_r;
reg  builder_basesoc_csr_bankarray_csrbank9_in_we = 1'd0;
wire [8:0] builder_basesoc_csr_bankarray_csrbank9_in_w;
wire builder_basesoc_csr_bankarray_csrbank9_sel;
wire [13:0] builder_basesoc_csr_interconnect_adr;
wire builder_basesoc_csr_interconnect_we;
wire [31:0] builder_basesoc_csr_interconnect_dat_w;
wire [31:0] builder_basesoc_csr_interconnect_dat_r;
reg  builder_basesoc_state = 1'd0;
reg  builder_basesoc_next_state = 1'd0;
wire sys_clk;
wire sys_rst;
wire por_clk;
reg  builder_int_rst = 1'd1;
reg  builder_multiregimpl0_regs0 = 1'd0;
reg  builder_multiregimpl0_regs1 = 1'd0;
reg  [8:0] builder_multiregimpl1_regs0 = 9'd0;
reg  [8:0] builder_multiregimpl1_regs1 = 9'd0;
reg  builder_multiregimpl2_regs0 = 1'd0;
reg  builder_multiregimpl2_regs1 = 1'd0;

//------------------------------------------------------------------------------
// Combinatorial Logic
//------------------------------------------------------------------------------

assign display_1 = (~__main___display1_abcdefg0);
assign display_2 = (~__main___display2_abcdefg0);
assign display_3 = (~__main___display3_abcdefg0);
assign display_4 = (~__main___display4_abcdefg0);
assign display_5 = (~__main___display5_abcdefg0);
assign display_6 = (~__main___display6_abcdefg0);
assign __main___bus_errors_status = __main___bus_errors;
assign __main___wait = (~__main___is_ongoing);
assign __main___reset = __main___done;
assign __main___wishbone_adr = __main___address;
assign __main___wishbone_dat_w = __main___data;
assign __main___wishbone_sel = 4'd15;
always @(*) begin
	__main___tx_sink_payload_data <= 8'd0;
	case (__main___bytes_count)
		1'd0: begin
			__main___tx_sink_payload_data <= __main___data[31:24];
		end
		1'd1: begin
			__main___tx_sink_payload_data <= __main___data[31:16];
		end
		2'd2: begin
			__main___tx_sink_payload_data <= __main___data[31:8];
		end
		2'd3: begin
			__main___tx_sink_payload_data <= __main___data[31:0];
		end
	endcase
end
assign __main___tx_sink_last = ((__main___bytes_count == 2'd3) & (__main___words_count == (__main___length - 1'd1)));
always @(*) begin
	__main___tx_data_rs232phytx_next_value2 <= 8'd0;
	__main___tx_data_rs232phytx_next_value_ce2 <= 1'd0;
	__main___tx_enable <= 1'd0;
	__main___tx_sink_ready <= 1'd0;
	builder_subfragments_rs232phytx_next_state <= 1'd0;
	__main___tx_count_rs232phytx_next_value0 <= 4'd0;
	__main___tx_count_rs232phytx_next_value_ce0 <= 1'd0;
	__main___obj_serial_tx_rs232phytx_next_value1 <= 1'd0;
	__main___obj_serial_tx_rs232phytx_next_value_ce1 <= 1'd0;
	builder_subfragments_rs232phytx_next_state <= builder_subfragments_rs232phytx_state;
	case (builder_subfragments_rs232phytx_state)
		1'd1: begin
			__main___tx_enable <= 1'd1;
			if (__main___tx_tick) begin
				__main___obj_serial_tx_rs232phytx_next_value1 <= __main___tx_data;
				__main___obj_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
				__main___tx_count_rs232phytx_next_value0 <= (__main___tx_count + 1'd1);
				__main___tx_count_rs232phytx_next_value_ce0 <= 1'd1;
				__main___tx_data_rs232phytx_next_value2 <= {1'd1, __main___tx_data[7:1]};
				__main___tx_data_rs232phytx_next_value_ce2 <= 1'd1;
				if ((__main___tx_count == 4'd9)) begin
					__main___tx_sink_ready <= 1'd1;
					builder_subfragments_rs232phytx_next_state <= 1'd0;
				end
			end
		end
		default: begin
			__main___tx_count_rs232phytx_next_value0 <= 1'd0;
			__main___tx_count_rs232phytx_next_value_ce0 <= 1'd1;
			__main___obj_serial_tx_rs232phytx_next_value1 <= 1'd1;
			__main___obj_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
			if (__main___tx_sink_valid) begin
				__main___obj_serial_tx_rs232phytx_next_value1 <= 1'd0;
				__main___obj_serial_tx_rs232phytx_next_value_ce1 <= 1'd1;
				__main___tx_data_rs232phytx_next_value2 <= __main___tx_sink_payload_data;
				__main___tx_data_rs232phytx_next_value_ce2 <= 1'd1;
				builder_subfragments_rs232phytx_next_state <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	__main___rx_data_rs232phyrx_next_value1 <= 8'd0;
	__main___rx_data_rs232phyrx_next_value_ce1 <= 1'd0;
	__main___rx_source_valid <= 1'd0;
	builder_subfragments_rs232phyrx_next_state <= 1'd0;
	__main___rx_count_rs232phyrx_next_value0 <= 4'd0;
	__main___rx_count_rs232phyrx_next_value_ce0 <= 1'd0;
	__main___rx_source_payload_data <= 8'd0;
	__main___rx_enable <= 1'd0;
	builder_subfragments_rs232phyrx_next_state <= builder_subfragments_rs232phyrx_state;
	case (builder_subfragments_rs232phyrx_state)
		1'd1: begin
			__main___rx_enable <= 1'd1;
			if (__main___rx_tick) begin
				__main___rx_count_rs232phyrx_next_value0 <= (__main___rx_count + 1'd1);
				__main___rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
				__main___rx_data_rs232phyrx_next_value1 <= {__main___rx_rx, __main___rx_data[7:1]};
				__main___rx_data_rs232phyrx_next_value_ce1 <= 1'd1;
				if ((__main___rx_count == 4'd9)) begin
					__main___rx_source_valid <= (__main___rx_rx == 1'd1);
					__main___rx_source_payload_data <= __main___rx_data;
					builder_subfragments_rs232phyrx_next_state <= 1'd0;
				end
			end
		end
		default: begin
			__main___rx_count_rs232phyrx_next_value0 <= 1'd0;
			__main___rx_count_rs232phyrx_next_value_ce0 <= 1'd1;
			if (((__main___rx_rx == 1'd0) & (__main___rx_rx_d == 1'd1))) begin
				builder_subfragments_rs232phyrx_next_state <= 1'd1;
			end
		end
	endcase
end
always @(*) begin
	__main___cmd_next_value2 <= 8'd0;
	__main___cmd_next_value_ce2 <= 1'd0;
	__main___wishbone_cyc <= 1'd0;
	__main___wishbone_stb <= 1'd0;
	__main___length_next_value3 <= 8'd0;
	__main___length_next_value_ce3 <= 1'd0;
	__main___wishbone_we <= 1'd0;
	__main___address_next_value4 <= 32'd0;
	__main___address_next_value_ce4 <= 1'd0;
	__main___rx_source_ready <= 1'd0;
	__main___incr_next_value5 <= 1'd0;
	__main___incr_next_value_ce5 <= 1'd0;
	__main___data_next_value6 <= 32'd0;
	__main___data_next_value_ce6 <= 1'd0;
	__main___tx_sink_valid <= 1'd0;
	__main___is_ongoing <= 1'd0;
	builder_subfragments_next_state <= 3'd0;
	__main___bytes_count_next_value0 <= 2'd0;
	__main___bytes_count_next_value_ce0 <= 1'd0;
	__main___words_count_next_value1 <= 8'd0;
	__main___words_count_next_value_ce1 <= 1'd0;
	builder_subfragments_next_state <= builder_subfragments_state;
	case (builder_subfragments_state)
		1'd1: begin
			__main___rx_source_ready <= 1'd1;
			if (__main___rx_source_valid) begin
				__main___length_next_value3 <= __main___rx_source_payload_data;
				__main___length_next_value_ce3 <= 1'd1;
				builder_subfragments_next_state <= 2'd2;
			end
		end
		2'd2: begin
			__main___rx_source_ready <= 1'd1;
			if (__main___rx_source_valid) begin
				__main___address_next_value4 <= {__main___address, __main___rx_source_payload_data};
				__main___address_next_value_ce4 <= 1'd1;
				__main___bytes_count_next_value0 <= (__main___bytes_count + 1'd1);
				__main___bytes_count_next_value_ce0 <= 1'd1;
				if ((__main___bytes_count == 2'd3)) begin
					if (((__main___cmd == 1'd1) | (__main___cmd == 2'd3))) begin
						__main___incr_next_value5 <= (__main___cmd == 1'd1);
						__main___incr_next_value_ce5 <= 1'd1;
						builder_subfragments_next_state <= 2'd3;
					end else begin
						if (((__main___cmd == 2'd2) | (__main___cmd == 3'd4))) begin
							__main___incr_next_value5 <= (__main___cmd == 2'd2);
							__main___incr_next_value_ce5 <= 1'd1;
							builder_subfragments_next_state <= 3'd5;
						end else begin
							builder_subfragments_next_state <= 1'd0;
						end
					end
				end
			end
		end
		2'd3: begin
			__main___rx_source_ready <= 1'd1;
			if (__main___rx_source_valid) begin
				__main___data_next_value6 <= {__main___data, __main___rx_source_payload_data};
				__main___data_next_value_ce6 <= 1'd1;
				__main___bytes_count_next_value0 <= (__main___bytes_count + 1'd1);
				__main___bytes_count_next_value_ce0 <= 1'd1;
				if ((__main___bytes_count == 2'd3)) begin
					builder_subfragments_next_state <= 3'd4;
				end
			end
		end
		3'd4: begin
			__main___rx_source_ready <= 1'd0;
			__main___wishbone_stb <= 1'd1;
			__main___wishbone_we <= 1'd1;
			__main___wishbone_cyc <= 1'd1;
			if (__main___wishbone_ack) begin
				__main___words_count_next_value1 <= (__main___words_count + 1'd1);
				__main___words_count_next_value_ce1 <= 1'd1;
				__main___address_next_value4 <= (__main___address + __main___incr);
				__main___address_next_value_ce4 <= 1'd1;
				if ((__main___words_count == (__main___length - 1'd1))) begin
					builder_subfragments_next_state <= 1'd0;
				end else begin
					builder_subfragments_next_state <= 2'd3;
				end
			end
		end
		3'd5: begin
			__main___rx_source_ready <= 1'd0;
			__main___wishbone_stb <= 1'd1;
			__main___wishbone_we <= 1'd0;
			__main___wishbone_cyc <= 1'd1;
			if (__main___wishbone_ack) begin
				__main___data_next_value6 <= __main___wishbone_dat_r;
				__main___data_next_value_ce6 <= 1'd1;
				builder_subfragments_next_state <= 3'd6;
			end
		end
		3'd6: begin
			__main___rx_source_ready <= 1'd0;
			__main___tx_sink_valid <= 1'd1;
			if (__main___tx_sink_ready) begin
				__main___bytes_count_next_value0 <= (__main___bytes_count + 1'd1);
				__main___bytes_count_next_value_ce0 <= 1'd1;
				if ((__main___bytes_count == 2'd3)) begin
					__main___words_count_next_value1 <= (__main___words_count + 1'd1);
					__main___words_count_next_value_ce1 <= 1'd1;
					__main___address_next_value4 <= (__main___address + __main___incr);
					__main___address_next_value_ce4 <= 1'd1;
					if ((__main___words_count == (__main___length - 1'd1))) begin
						builder_subfragments_next_state <= 1'd0;
					end else begin
						builder_subfragments_next_state <= 3'd5;
					end
				end
			end
		end
		default: begin
			__main___is_ongoing <= 1'd1;
			__main___rx_source_ready <= 1'd1;
			__main___bytes_count_next_value0 <= 1'd0;
			__main___bytes_count_next_value_ce0 <= 1'd1;
			__main___words_count_next_value1 <= 1'd0;
			__main___words_count_next_value_ce1 <= 1'd1;
			if (__main___rx_source_valid) begin
				__main___cmd_next_value2 <= __main___rx_source_payload_data;
				__main___cmd_next_value_ce2 <= 1'd1;
				builder_subfragments_next_state <= 1'd1;
			end
		end
	endcase
end
assign __main___done = (__main___count == 1'd0);
assign {user_led8, user_led7, user_led6, user_led5, user_led4, user_led3, user_led2, user_led1, user_led0} = __main___leds_storage;
assign __main___display1_abcdefg0 = __main___display1_abcdefg1;
always @(*) begin
	__main___display1_abcdefg1 <= 7'd0;
	case (__main___display1_value)
		1'd0: begin
			__main___display1_abcdefg1 <= 6'd63;
		end
		1'd1: begin
			__main___display1_abcdefg1 <= 3'd6;
		end
		2'd2: begin
			__main___display1_abcdefg1 <= 7'd91;
		end
		2'd3: begin
			__main___display1_abcdefg1 <= 7'd79;
		end
		3'd4: begin
			__main___display1_abcdefg1 <= 7'd102;
		end
		3'd5: begin
			__main___display1_abcdefg1 <= 7'd109;
		end
		3'd6: begin
			__main___display1_abcdefg1 <= 7'd125;
		end
		3'd7: begin
			__main___display1_abcdefg1 <= 3'd7;
		end
		4'd8: begin
			__main___display1_abcdefg1 <= 7'd127;
		end
		4'd9: begin
			__main___display1_abcdefg1 <= 7'd111;
		end
		4'd10: begin
			__main___display1_abcdefg1 <= 7'd119;
		end
		4'd11: begin
			__main___display1_abcdefg1 <= 7'd124;
		end
		4'd12: begin
			__main___display1_abcdefg1 <= 6'd57;
		end
		4'd13: begin
			__main___display1_abcdefg1 <= 7'd94;
		end
		4'd14: begin
			__main___display1_abcdefg1 <= 7'd121;
		end
		4'd15: begin
			__main___display1_abcdefg1 <= 7'd113;
		end
	endcase
end
assign __main___display2_abcdefg0 = __main___display2_abcdefg1;
always @(*) begin
	__main___display2_abcdefg1 <= 7'd0;
	case (__main___display2_value)
		1'd0: begin
			__main___display2_abcdefg1 <= 6'd63;
		end
		1'd1: begin
			__main___display2_abcdefg1 <= 3'd6;
		end
		2'd2: begin
			__main___display2_abcdefg1 <= 7'd91;
		end
		2'd3: begin
			__main___display2_abcdefg1 <= 7'd79;
		end
		3'd4: begin
			__main___display2_abcdefg1 <= 7'd102;
		end
		3'd5: begin
			__main___display2_abcdefg1 <= 7'd109;
		end
		3'd6: begin
			__main___display2_abcdefg1 <= 7'd125;
		end
		3'd7: begin
			__main___display2_abcdefg1 <= 3'd7;
		end
		4'd8: begin
			__main___display2_abcdefg1 <= 7'd127;
		end
		4'd9: begin
			__main___display2_abcdefg1 <= 7'd111;
		end
		4'd10: begin
			__main___display2_abcdefg1 <= 7'd119;
		end
		4'd11: begin
			__main___display2_abcdefg1 <= 7'd124;
		end
		4'd12: begin
			__main___display2_abcdefg1 <= 6'd57;
		end
		4'd13: begin
			__main___display2_abcdefg1 <= 7'd94;
		end
		4'd14: begin
			__main___display2_abcdefg1 <= 7'd121;
		end
		4'd15: begin
			__main___display2_abcdefg1 <= 7'd113;
		end
	endcase
end
assign __main___display3_abcdefg0 = __main___display3_abcdefg1;
always @(*) begin
	__main___display3_abcdefg1 <= 7'd0;
	case (__main___display3_value)
		1'd0: begin
			__main___display3_abcdefg1 <= 6'd63;
		end
		1'd1: begin
			__main___display3_abcdefg1 <= 3'd6;
		end
		2'd2: begin
			__main___display3_abcdefg1 <= 7'd91;
		end
		2'd3: begin
			__main___display3_abcdefg1 <= 7'd79;
		end
		3'd4: begin
			__main___display3_abcdefg1 <= 7'd102;
		end
		3'd5: begin
			__main___display3_abcdefg1 <= 7'd109;
		end
		3'd6: begin
			__main___display3_abcdefg1 <= 7'd125;
		end
		3'd7: begin
			__main___display3_abcdefg1 <= 3'd7;
		end
		4'd8: begin
			__main___display3_abcdefg1 <= 7'd127;
		end
		4'd9: begin
			__main___display3_abcdefg1 <= 7'd111;
		end
		4'd10: begin
			__main___display3_abcdefg1 <= 7'd119;
		end
		4'd11: begin
			__main___display3_abcdefg1 <= 7'd124;
		end
		4'd12: begin
			__main___display3_abcdefg1 <= 6'd57;
		end
		4'd13: begin
			__main___display3_abcdefg1 <= 7'd94;
		end
		4'd14: begin
			__main___display3_abcdefg1 <= 7'd121;
		end
		4'd15: begin
			__main___display3_abcdefg1 <= 7'd113;
		end
	endcase
end
assign __main___display4_abcdefg0 = __main___display4_abcdefg1;
always @(*) begin
	__main___display4_abcdefg1 <= 7'd0;
	case (__main___display4_value)
		1'd0: begin
			__main___display4_abcdefg1 <= 6'd63;
		end
		1'd1: begin
			__main___display4_abcdefg1 <= 3'd6;
		end
		2'd2: begin
			__main___display4_abcdefg1 <= 7'd91;
		end
		2'd3: begin
			__main___display4_abcdefg1 <= 7'd79;
		end
		3'd4: begin
			__main___display4_abcdefg1 <= 7'd102;
		end
		3'd5: begin
			__main___display4_abcdefg1 <= 7'd109;
		end
		3'd6: begin
			__main___display4_abcdefg1 <= 7'd125;
		end
		3'd7: begin
			__main___display4_abcdefg1 <= 3'd7;
		end
		4'd8: begin
			__main___display4_abcdefg1 <= 7'd127;
		end
		4'd9: begin
			__main___display4_abcdefg1 <= 7'd111;
		end
		4'd10: begin
			__main___display4_abcdefg1 <= 7'd119;
		end
		4'd11: begin
			__main___display4_abcdefg1 <= 7'd124;
		end
		4'd12: begin
			__main___display4_abcdefg1 <= 6'd57;
		end
		4'd13: begin
			__main___display4_abcdefg1 <= 7'd94;
		end
		4'd14: begin
			__main___display4_abcdefg1 <= 7'd121;
		end
		4'd15: begin
			__main___display4_abcdefg1 <= 7'd113;
		end
	endcase
end
assign __main___display5_abcdefg0 = __main___display5_abcdefg1;
always @(*) begin
	__main___display5_abcdefg1 <= 7'd0;
	case (__main___display5_value)
		1'd0: begin
			__main___display5_abcdefg1 <= 6'd63;
		end
		1'd1: begin
			__main___display5_abcdefg1 <= 3'd6;
		end
		2'd2: begin
			__main___display5_abcdefg1 <= 7'd91;
		end
		2'd3: begin
			__main___display5_abcdefg1 <= 7'd79;
		end
		3'd4: begin
			__main___display5_abcdefg1 <= 7'd102;
		end
		3'd5: begin
			__main___display5_abcdefg1 <= 7'd109;
		end
		3'd6: begin
			__main___display5_abcdefg1 <= 7'd125;
		end
		3'd7: begin
			__main___display5_abcdefg1 <= 3'd7;
		end
		4'd8: begin
			__main___display5_abcdefg1 <= 7'd127;
		end
		4'd9: begin
			__main___display5_abcdefg1 <= 7'd111;
		end
		4'd10: begin
			__main___display5_abcdefg1 <= 7'd119;
		end
		4'd11: begin
			__main___display5_abcdefg1 <= 7'd124;
		end
		4'd12: begin
			__main___display5_abcdefg1 <= 6'd57;
		end
		4'd13: begin
			__main___display5_abcdefg1 <= 7'd94;
		end
		4'd14: begin
			__main___display5_abcdefg1 <= 7'd121;
		end
		4'd15: begin
			__main___display5_abcdefg1 <= 7'd113;
		end
	endcase
end
assign __main___display6_abcdefg0 = __main___display6_abcdefg1;
always @(*) begin
	__main___display6_abcdefg1 <= 7'd0;
	case (__main___display6_value)
		1'd0: begin
			__main___display6_abcdefg1 <= 6'd63;
		end
		1'd1: begin
			__main___display6_abcdefg1 <= 3'd6;
		end
		2'd2: begin
			__main___display6_abcdefg1 <= 7'd91;
		end
		2'd3: begin
			__main___display6_abcdefg1 <= 7'd79;
		end
		3'd4: begin
			__main___display6_abcdefg1 <= 7'd102;
		end
		3'd5: begin
			__main___display6_abcdefg1 <= 7'd109;
		end
		3'd6: begin
			__main___display6_abcdefg1 <= 7'd125;
		end
		3'd7: begin
			__main___display6_abcdefg1 <= 3'd7;
		end
		4'd8: begin
			__main___display6_abcdefg1 <= 7'd127;
		end
		4'd9: begin
			__main___display6_abcdefg1 <= 7'd111;
		end
		4'd10: begin
			__main___display6_abcdefg1 <= 7'd119;
		end
		4'd11: begin
			__main___display6_abcdefg1 <= 7'd124;
		end
		4'd12: begin
			__main___display6_abcdefg1 <= 6'd57;
		end
		4'd13: begin
			__main___display6_abcdefg1 <= 7'd94;
		end
		4'd14: begin
			__main___display6_abcdefg1 <= 7'd121;
		end
		4'd15: begin
			__main___display6_abcdefg1 <= 7'd113;
		end
	endcase
end
always @(*) begin
	builder_basesoc_basesoc_wishbone_dat_r <= 32'd0;
	builder_basesoc_basesoc_wishbone_ack <= 1'd0;
	builder_basesoc_basesoc_adr <= 14'd0;
	builder_basesoc_next_state <= 1'd0;
	builder_basesoc_basesoc_we <= 1'd0;
	builder_basesoc_basesoc_dat_w <= 32'd0;
	builder_basesoc_next_state <= builder_basesoc_state;
	case (builder_basesoc_state)
		1'd1: begin
			builder_basesoc_basesoc_wishbone_ack <= 1'd1;
			builder_basesoc_basesoc_wishbone_dat_r <= builder_basesoc_basesoc_dat_r;
			builder_basesoc_next_state <= 1'd0;
		end
		default: begin
			builder_basesoc_basesoc_dat_w <= builder_basesoc_basesoc_wishbone_dat_w;
			if ((builder_basesoc_basesoc_wishbone_cyc & builder_basesoc_basesoc_wishbone_stb)) begin
				builder_basesoc_basesoc_adr <= builder_basesoc_basesoc_wishbone_adr;
				builder_basesoc_basesoc_we <= (builder_basesoc_basesoc_wishbone_we & (builder_basesoc_basesoc_wishbone_sel != 1'd0));
				builder_basesoc_next_state <= 1'd1;
			end
		end
	endcase
end
assign builder_basesoc_basesoc_wishbone_adr = __main___wishbone_adr;
assign builder_basesoc_basesoc_wishbone_dat_w = __main___wishbone_dat_w;
assign __main___wishbone_dat_r = builder_basesoc_basesoc_wishbone_dat_r;
assign builder_basesoc_basesoc_wishbone_sel = __main___wishbone_sel;
assign builder_basesoc_basesoc_wishbone_cyc = __main___wishbone_cyc;
assign builder_basesoc_basesoc_wishbone_stb = __main___wishbone_stb;
assign __main___wishbone_ack = builder_basesoc_basesoc_wishbone_ack;
assign builder_basesoc_basesoc_wishbone_we = __main___wishbone_we;
assign builder_basesoc_basesoc_wishbone_cti = __main___wishbone_cti;
assign builder_basesoc_basesoc_wishbone_bte = __main___wishbone_bte;
assign __main___wishbone_err = builder_basesoc_basesoc_wishbone_err;
assign builder_basesoc_csr_bankarray_csrbank0_sel = (builder_basesoc_csr_bankarray_interface0_bank_bus_adr[13:9] == 2'd2);
assign builder_basesoc_csr_bankarray_csrbank0_in_r = builder_basesoc_csr_bankarray_interface0_bank_bus_dat_w[0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank0_in_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank0_in_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank0_sel & (builder_basesoc_csr_bankarray_interface0_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank0_in_re <= builder_basesoc_csr_bankarray_interface0_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank0_in_we <= (~builder_basesoc_csr_bankarray_interface0_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank0_in_w = __main___buttons_status;
assign __main___buttons_we = builder_basesoc_csr_bankarray_csrbank0_in_we;
assign builder_basesoc_csr_bankarray_csrbank1_sel = (builder_basesoc_csr_bankarray_interface1_bank_bus_adr[13:9] == 4'd9);
assign builder_basesoc_csr_bankarray_csrbank1_reset0_r = builder_basesoc_csr_bankarray_interface1_bank_bus_dat_w[1:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank1_reset0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank1_reset0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank1_sel & (builder_basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank1_reset0_re <= builder_basesoc_csr_bankarray_interface1_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank1_reset0_we <= (~builder_basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank1_scratch0_r = builder_basesoc_csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank1_scratch0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank1_scratch0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank1_sel & (builder_basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 1'd1))) begin
		builder_basesoc_csr_bankarray_csrbank1_scratch0_re <= builder_basesoc_csr_bankarray_interface1_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank1_scratch0_we <= (~builder_basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank1_bus_errors_r = builder_basesoc_csr_bankarray_interface1_bank_bus_dat_w[31:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank1_bus_errors_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank1_bus_errors_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank1_sel & (builder_basesoc_csr_bankarray_interface1_bank_bus_adr[8:0] == 2'd2))) begin
		builder_basesoc_csr_bankarray_csrbank1_bus_errors_re <= builder_basesoc_csr_bankarray_interface1_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank1_bus_errors_we <= (~builder_basesoc_csr_bankarray_interface1_bank_bus_we);
	end
end
always @(*) begin
	__main___soc_rst <= 1'd0;
	if (__main___reset_re) begin
		__main___soc_rst <= __main___reset_storage[0];
	end
end
assign __main___cpu_rst = __main___reset_storage[1];
assign builder_basesoc_csr_bankarray_csrbank1_reset0_w = __main___reset_storage[1:0];
assign builder_basesoc_csr_bankarray_csrbank1_scratch0_w = __main___scratch_storage[31:0];
assign builder_basesoc_csr_bankarray_csrbank1_bus_errors_w = __main___bus_errors_status[31:0];
assign __main___bus_errors_we = builder_basesoc_csr_bankarray_csrbank1_bus_errors_we;
assign builder_basesoc_csr_bankarray_csrbank2_sel = (builder_basesoc_csr_bankarray_interface2_bank_bus_adr[13:9] == 2'd3);
assign builder_basesoc_csr_bankarray_csrbank2_value0_r = builder_basesoc_csr_bankarray_interface2_bank_bus_dat_w[3:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank2_value0_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank2_value0_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank2_sel & (builder_basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank2_value0_re <= builder_basesoc_csr_bankarray_interface2_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank2_value0_we <= (~builder_basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign __main___display1_write_r = builder_basesoc_csr_bankarray_interface2_bank_bus_dat_w[0];
always @(*) begin
	__main___display1_write_we <= 1'd0;
	__main___display1_write_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank2_sel & (builder_basesoc_csr_bankarray_interface2_bank_bus_adr[8:0] == 1'd1))) begin
		__main___display1_write_re <= builder_basesoc_csr_bankarray_interface2_bank_bus_we;
		__main___display1_write_we <= (~builder_basesoc_csr_bankarray_interface2_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank2_value0_w = __main___display1_storage[3:0];
assign builder_basesoc_csr_bankarray_csrbank3_sel = (builder_basesoc_csr_bankarray_interface3_bank_bus_adr[13:9] == 3'd4);
assign builder_basesoc_csr_bankarray_csrbank3_value0_r = builder_basesoc_csr_bankarray_interface3_bank_bus_dat_w[3:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank3_value0_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank3_value0_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank3_sel & (builder_basesoc_csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank3_value0_re <= builder_basesoc_csr_bankarray_interface3_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank3_value0_we <= (~builder_basesoc_csr_bankarray_interface3_bank_bus_we);
	end
end
assign __main___display2_write_r = builder_basesoc_csr_bankarray_interface3_bank_bus_dat_w[0];
always @(*) begin
	__main___display2_write_re <= 1'd0;
	__main___display2_write_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank3_sel & (builder_basesoc_csr_bankarray_interface3_bank_bus_adr[8:0] == 1'd1))) begin
		__main___display2_write_re <= builder_basesoc_csr_bankarray_interface3_bank_bus_we;
		__main___display2_write_we <= (~builder_basesoc_csr_bankarray_interface3_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank3_value0_w = __main___display2_storage[3:0];
assign builder_basesoc_csr_bankarray_csrbank4_sel = (builder_basesoc_csr_bankarray_interface4_bank_bus_adr[13:9] == 3'd5);
assign builder_basesoc_csr_bankarray_csrbank4_value0_r = builder_basesoc_csr_bankarray_interface4_bank_bus_dat_w[3:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank4_value0_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank4_value0_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank4_sel & (builder_basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank4_value0_re <= builder_basesoc_csr_bankarray_interface4_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank4_value0_we <= (~builder_basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign __main___display3_write_r = builder_basesoc_csr_bankarray_interface4_bank_bus_dat_w[0];
always @(*) begin
	__main___display3_write_we <= 1'd0;
	__main___display3_write_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank4_sel & (builder_basesoc_csr_bankarray_interface4_bank_bus_adr[8:0] == 1'd1))) begin
		__main___display3_write_re <= builder_basesoc_csr_bankarray_interface4_bank_bus_we;
		__main___display3_write_we <= (~builder_basesoc_csr_bankarray_interface4_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank4_value0_w = __main___display3_storage[3:0];
assign builder_basesoc_csr_bankarray_csrbank5_sel = (builder_basesoc_csr_bankarray_interface5_bank_bus_adr[13:9] == 3'd6);
assign builder_basesoc_csr_bankarray_csrbank5_value0_r = builder_basesoc_csr_bankarray_interface5_bank_bus_dat_w[3:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank5_value0_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank5_value0_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank5_sel & (builder_basesoc_csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank5_value0_re <= builder_basesoc_csr_bankarray_interface5_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank5_value0_we <= (~builder_basesoc_csr_bankarray_interface5_bank_bus_we);
	end
end
assign __main___display4_write_r = builder_basesoc_csr_bankarray_interface5_bank_bus_dat_w[0];
always @(*) begin
	__main___display4_write_re <= 1'd0;
	__main___display4_write_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank5_sel & (builder_basesoc_csr_bankarray_interface5_bank_bus_adr[8:0] == 1'd1))) begin
		__main___display4_write_re <= builder_basesoc_csr_bankarray_interface5_bank_bus_we;
		__main___display4_write_we <= (~builder_basesoc_csr_bankarray_interface5_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank5_value0_w = __main___display4_storage[3:0];
assign builder_basesoc_csr_bankarray_csrbank6_sel = (builder_basesoc_csr_bankarray_interface6_bank_bus_adr[13:9] == 3'd7);
assign builder_basesoc_csr_bankarray_csrbank6_value0_r = builder_basesoc_csr_bankarray_interface6_bank_bus_dat_w[3:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank6_value0_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank6_value0_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank6_sel & (builder_basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank6_value0_re <= builder_basesoc_csr_bankarray_interface6_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank6_value0_we <= (~builder_basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign __main___display5_write_r = builder_basesoc_csr_bankarray_interface6_bank_bus_dat_w[0];
always @(*) begin
	__main___display5_write_we <= 1'd0;
	__main___display5_write_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank6_sel & (builder_basesoc_csr_bankarray_interface6_bank_bus_adr[8:0] == 1'd1))) begin
		__main___display5_write_re <= builder_basesoc_csr_bankarray_interface6_bank_bus_we;
		__main___display5_write_we <= (~builder_basesoc_csr_bankarray_interface6_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank6_value0_w = __main___display5_storage[3:0];
assign builder_basesoc_csr_bankarray_csrbank7_sel = (builder_basesoc_csr_bankarray_interface7_bank_bus_adr[13:9] == 4'd8);
assign builder_basesoc_csr_bankarray_csrbank7_value0_r = builder_basesoc_csr_bankarray_interface7_bank_bus_dat_w[3:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank7_value0_we <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank7_value0_re <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank7_sel & (builder_basesoc_csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank7_value0_re <= builder_basesoc_csr_bankarray_interface7_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank7_value0_we <= (~builder_basesoc_csr_bankarray_interface7_bank_bus_we);
	end
end
assign __main___display6_write_r = builder_basesoc_csr_bankarray_interface7_bank_bus_dat_w[0];
always @(*) begin
	__main___display6_write_re <= 1'd0;
	__main___display6_write_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank7_sel & (builder_basesoc_csr_bankarray_interface7_bank_bus_adr[8:0] == 1'd1))) begin
		__main___display6_write_re <= builder_basesoc_csr_bankarray_interface7_bank_bus_we;
		__main___display6_write_we <= (~builder_basesoc_csr_bankarray_interface7_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank7_value0_w = __main___display6_storage[3:0];
assign builder_basesoc_csr_bankarray_sel = (builder_basesoc_csr_bankarray_sram_bus_adr[13:9] == 4'd10);
always @(*) begin
	builder_basesoc_csr_bankarray_sram_bus_dat_r <= 32'd0;
	if (builder_basesoc_csr_bankarray_sel_r) begin
		builder_basesoc_csr_bankarray_sram_bus_dat_r <= builder_basesoc_csr_bankarray_dat_r;
	end
end
assign builder_basesoc_csr_bankarray_adr = builder_basesoc_csr_bankarray_sram_bus_adr[5:0];
assign builder_basesoc_csr_bankarray_csrbank8_sel = (builder_basesoc_csr_bankarray_interface8_bank_bus_adr[13:9] == 1'd0);
assign builder_basesoc_csr_bankarray_csrbank8_out0_r = builder_basesoc_csr_bankarray_interface8_bank_bus_dat_w[8:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank8_out0_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank8_out0_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank8_sel & (builder_basesoc_csr_bankarray_interface8_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank8_out0_re <= builder_basesoc_csr_bankarray_interface8_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank8_out0_we <= (~builder_basesoc_csr_bankarray_interface8_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank8_out0_w = __main___leds_storage[8:0];
assign builder_basesoc_csr_bankarray_csrbank9_sel = (builder_basesoc_csr_bankarray_interface9_bank_bus_adr[13:9] == 1'd1);
assign builder_basesoc_csr_bankarray_csrbank9_in_r = builder_basesoc_csr_bankarray_interface9_bank_bus_dat_w[8:0];
always @(*) begin
	builder_basesoc_csr_bankarray_csrbank9_in_re <= 1'd0;
	builder_basesoc_csr_bankarray_csrbank9_in_we <= 1'd0;
	if ((builder_basesoc_csr_bankarray_csrbank9_sel & (builder_basesoc_csr_bankarray_interface9_bank_bus_adr[8:0] == 1'd0))) begin
		builder_basesoc_csr_bankarray_csrbank9_in_re <= builder_basesoc_csr_bankarray_interface9_bank_bus_we;
		builder_basesoc_csr_bankarray_csrbank9_in_we <= (~builder_basesoc_csr_bankarray_interface9_bank_bus_we);
	end
end
assign builder_basesoc_csr_bankarray_csrbank9_in_w = __main___switches_status[8:0];
assign __main___switches_we = builder_basesoc_csr_bankarray_csrbank9_in_we;
assign builder_basesoc_csr_interconnect_adr = builder_basesoc_basesoc_adr;
assign builder_basesoc_csr_interconnect_we = builder_basesoc_basesoc_we;
assign builder_basesoc_csr_interconnect_dat_w = builder_basesoc_basesoc_dat_w;
assign builder_basesoc_basesoc_dat_r = builder_basesoc_csr_interconnect_dat_r;
assign builder_basesoc_csr_bankarray_interface0_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface1_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface2_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface3_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface4_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface5_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface6_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface7_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface8_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface9_bank_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_sram_bus_adr = builder_basesoc_csr_interconnect_adr;
assign builder_basesoc_csr_bankarray_interface0_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface1_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface2_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface3_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface4_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface5_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface6_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface7_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface8_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface9_bank_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_sram_bus_we = builder_basesoc_csr_interconnect_we;
assign builder_basesoc_csr_bankarray_interface0_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface1_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface2_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface3_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface4_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface5_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface6_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface7_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface8_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_interface9_bank_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_bankarray_sram_bus_dat_w = builder_basesoc_csr_interconnect_dat_w;
assign builder_basesoc_csr_interconnect_dat_r = ((((((((((builder_basesoc_csr_bankarray_interface0_bank_bus_dat_r | builder_basesoc_csr_bankarray_interface1_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface2_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface3_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface4_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface5_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface6_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface7_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface8_bank_bus_dat_r) | builder_basesoc_csr_bankarray_interface9_bank_bus_dat_r) | builder_basesoc_csr_bankarray_sram_bus_dat_r);
assign sys_clk = clk50;
assign por_clk = clk50;
assign sys_rst = builder_int_rst;
assign __main___rx_rx = builder_multiregimpl0_regs1;
assign __main___switches_status = builder_multiregimpl1_regs1;
assign __main___buttons_status = builder_multiregimpl2_regs1;


//------------------------------------------------------------------------------
// Synchronous Logic
//------------------------------------------------------------------------------

always @(posedge por_clk) begin
	builder_int_rst <= 1'd0;
end

always @(posedge sys_clk) begin
	if ((__main___bus_errors != 32'd4294967295)) begin
		if (__main___bus_error) begin
			__main___bus_errors <= (__main___bus_errors + 1'd1);
		end
	end
	{__main___tx_tick, __main___tx_phase} <= 24'd9895604;
	if (__main___tx_enable) begin
		{__main___tx_tick, __main___tx_phase} <= (__main___tx_phase + 24'd9895604);
	end
	builder_subfragments_rs232phytx_state <= builder_subfragments_rs232phytx_next_state;
	if (__main___tx_count_rs232phytx_next_value_ce0) begin
		__main___tx_count <= __main___tx_count_rs232phytx_next_value0;
	end
	if (__main___obj_serial_tx_rs232phytx_next_value_ce1) begin
		serial_tx <= __main___obj_serial_tx_rs232phytx_next_value1;
	end
	if (__main___tx_data_rs232phytx_next_value_ce2) begin
		__main___tx_data <= __main___tx_data_rs232phytx_next_value2;
	end
	__main___rx_rx_d <= __main___rx_rx;
	{__main___rx_tick, __main___rx_phase} <= 32'd2147483648;
	if (__main___rx_enable) begin
		{__main___rx_tick, __main___rx_phase} <= (__main___rx_phase + 24'd9895604);
	end
	builder_subfragments_rs232phyrx_state <= builder_subfragments_rs232phyrx_next_state;
	if (__main___rx_count_rs232phyrx_next_value_ce0) begin
		__main___rx_count <= __main___rx_count_rs232phyrx_next_value0;
	end
	if (__main___rx_data_rs232phyrx_next_value_ce1) begin
		__main___rx_data <= __main___rx_data_rs232phyrx_next_value1;
	end
	builder_subfragments_state <= builder_subfragments_next_state;
	if (__main___bytes_count_next_value_ce0) begin
		__main___bytes_count <= __main___bytes_count_next_value0;
	end
	if (__main___words_count_next_value_ce1) begin
		__main___words_count <= __main___words_count_next_value1;
	end
	if (__main___cmd_next_value_ce2) begin
		__main___cmd <= __main___cmd_next_value2;
	end
	if (__main___length_next_value_ce3) begin
		__main___length <= __main___length_next_value3;
	end
	if (__main___address_next_value_ce4) begin
		__main___address <= __main___address_next_value4;
	end
	if (__main___incr_next_value_ce5) begin
		__main___incr <= __main___incr_next_value5;
	end
	if (__main___data_next_value_ce6) begin
		__main___data <= __main___data_next_value6;
	end
	if (__main___reset) begin
		__main___incr <= 1'd0;
		builder_subfragments_state <= 3'd0;
	end
	if (__main___wait) begin
		if ((~__main___done)) begin
			__main___count <= (__main___count - 1'd1);
		end
	end else begin
		__main___count <= 23'd5000000;
	end
	if (__main___display1_write_re) begin
		__main___display1_value <= __main___display1_storage;
	end
	if (__main___display2_write_re) begin
		__main___display2_value <= __main___display2_storage;
	end
	if (__main___display3_write_re) begin
		__main___display3_value <= __main___display3_storage;
	end
	if (__main___display4_write_re) begin
		__main___display4_value <= __main___display4_storage;
	end
	if (__main___display5_write_re) begin
		__main___display5_value <= __main___display5_storage;
	end
	if (__main___display6_write_re) begin
		__main___display6_value <= __main___display6_storage;
	end
	builder_basesoc_state <= builder_basesoc_next_state;
	builder_basesoc_csr_bankarray_interface0_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank0_sel) begin
		case (builder_basesoc_csr_bankarray_interface0_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface0_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank0_in_w;
			end
		endcase
	end
	__main___buttons_re <= builder_basesoc_csr_bankarray_csrbank0_in_re;
	builder_basesoc_csr_bankarray_interface1_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank1_sel) begin
		case (builder_basesoc_csr_bankarray_interface1_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface1_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank1_reset0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface1_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank1_scratch0_w;
			end
			2'd2: begin
				builder_basesoc_csr_bankarray_interface1_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank1_bus_errors_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank1_reset0_re) begin
		__main___reset_storage[1:0] <= builder_basesoc_csr_bankarray_csrbank1_reset0_r;
	end
	__main___reset_re <= builder_basesoc_csr_bankarray_csrbank1_reset0_re;
	if (builder_basesoc_csr_bankarray_csrbank1_scratch0_re) begin
		__main___scratch_storage[31:0] <= builder_basesoc_csr_bankarray_csrbank1_scratch0_r;
	end
	__main___scratch_re <= builder_basesoc_csr_bankarray_csrbank1_scratch0_re;
	__main___bus_errors_re <= builder_basesoc_csr_bankarray_csrbank1_bus_errors_re;
	builder_basesoc_csr_bankarray_interface2_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank2_sel) begin
		case (builder_basesoc_csr_bankarray_interface2_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface2_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank2_value0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface2_bank_bus_dat_r <= __main___display1_write_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank2_value0_re) begin
		__main___display1_storage[3:0] <= builder_basesoc_csr_bankarray_csrbank2_value0_r;
	end
	__main___display1_re <= builder_basesoc_csr_bankarray_csrbank2_value0_re;
	builder_basesoc_csr_bankarray_interface3_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank3_sel) begin
		case (builder_basesoc_csr_bankarray_interface3_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface3_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank3_value0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface3_bank_bus_dat_r <= __main___display2_write_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank3_value0_re) begin
		__main___display2_storage[3:0] <= builder_basesoc_csr_bankarray_csrbank3_value0_r;
	end
	__main___display2_re <= builder_basesoc_csr_bankarray_csrbank3_value0_re;
	builder_basesoc_csr_bankarray_interface4_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank4_sel) begin
		case (builder_basesoc_csr_bankarray_interface4_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface4_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank4_value0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface4_bank_bus_dat_r <= __main___display3_write_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank4_value0_re) begin
		__main___display3_storage[3:0] <= builder_basesoc_csr_bankarray_csrbank4_value0_r;
	end
	__main___display3_re <= builder_basesoc_csr_bankarray_csrbank4_value0_re;
	builder_basesoc_csr_bankarray_interface5_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank5_sel) begin
		case (builder_basesoc_csr_bankarray_interface5_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface5_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank5_value0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface5_bank_bus_dat_r <= __main___display4_write_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank5_value0_re) begin
		__main___display4_storage[3:0] <= builder_basesoc_csr_bankarray_csrbank5_value0_r;
	end
	__main___display4_re <= builder_basesoc_csr_bankarray_csrbank5_value0_re;
	builder_basesoc_csr_bankarray_interface6_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank6_sel) begin
		case (builder_basesoc_csr_bankarray_interface6_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface6_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank6_value0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface6_bank_bus_dat_r <= __main___display5_write_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank6_value0_re) begin
		__main___display5_storage[3:0] <= builder_basesoc_csr_bankarray_csrbank6_value0_r;
	end
	__main___display5_re <= builder_basesoc_csr_bankarray_csrbank6_value0_re;
	builder_basesoc_csr_bankarray_interface7_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank7_sel) begin
		case (builder_basesoc_csr_bankarray_interface7_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface7_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank7_value0_w;
			end
			1'd1: begin
				builder_basesoc_csr_bankarray_interface7_bank_bus_dat_r <= __main___display6_write_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank7_value0_re) begin
		__main___display6_storage[3:0] <= builder_basesoc_csr_bankarray_csrbank7_value0_r;
	end
	__main___display6_re <= builder_basesoc_csr_bankarray_csrbank7_value0_re;
	builder_basesoc_csr_bankarray_sel_r <= builder_basesoc_csr_bankarray_sel;
	builder_basesoc_csr_bankarray_interface8_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank8_sel) begin
		case (builder_basesoc_csr_bankarray_interface8_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface8_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank8_out0_w;
			end
		endcase
	end
	if (builder_basesoc_csr_bankarray_csrbank8_out0_re) begin
		__main___leds_storage[8:0] <= builder_basesoc_csr_bankarray_csrbank8_out0_r;
	end
	__main___leds_re <= builder_basesoc_csr_bankarray_csrbank8_out0_re;
	builder_basesoc_csr_bankarray_interface9_bank_bus_dat_r <= 1'd0;
	if (builder_basesoc_csr_bankarray_csrbank9_sel) begin
		case (builder_basesoc_csr_bankarray_interface9_bank_bus_adr[8:0])
			1'd0: begin
				builder_basesoc_csr_bankarray_interface9_bank_bus_dat_r <= builder_basesoc_csr_bankarray_csrbank9_in_w;
			end
		endcase
	end
	__main___switches_re <= builder_basesoc_csr_bankarray_csrbank9_in_re;
	if (sys_rst) begin
		__main___reset_storage <= 2'd0;
		__main___reset_re <= 1'd0;
		__main___scratch_storage <= 32'd305419896;
		__main___scratch_re <= 1'd0;
		__main___bus_errors_re <= 1'd0;
		__main___bus_errors <= 32'd0;
		serial_tx <= 1'd1;
		__main___tx_tick <= 1'd0;
		__main___rx_tick <= 1'd0;
		__main___rx_rx_d <= 1'd0;
		__main___incr <= 1'd0;
		__main___count <= 23'd5000000;
		__main___leds_storage <= 9'd0;
		__main___leds_re <= 1'd0;
		__main___switches_re <= 1'd0;
		__main___buttons_re <= 1'd0;
		__main___display1_storage <= 4'd0;
		__main___display1_re <= 1'd0;
		__main___display1_value <= 4'd0;
		__main___display2_storage <= 4'd0;
		__main___display2_re <= 1'd0;
		__main___display2_value <= 4'd0;
		__main___display3_storage <= 4'd0;
		__main___display3_re <= 1'd0;
		__main___display3_value <= 4'd0;
		__main___display4_storage <= 4'd0;
		__main___display4_re <= 1'd0;
		__main___display4_value <= 4'd0;
		__main___display5_storage <= 4'd0;
		__main___display5_re <= 1'd0;
		__main___display5_value <= 4'd0;
		__main___display6_storage <= 4'd0;
		__main___display6_re <= 1'd0;
		__main___display6_value <= 4'd0;
		builder_subfragments_rs232phytx_state <= 1'd0;
		builder_subfragments_rs232phyrx_state <= 1'd0;
		builder_subfragments_state <= 3'd0;
		builder_basesoc_csr_bankarray_sel_r <= 1'd0;
		builder_basesoc_state <= 1'd0;
	end
	builder_multiregimpl0_regs0 <= serial_rx;
	builder_multiregimpl0_regs1 <= builder_multiregimpl0_regs0;
	builder_multiregimpl1_regs0 <= {user_sw8, user_sw7, user_sw6, user_sw5, user_sw4, user_sw3, user_sw2, user_sw1, user_sw0};
	builder_multiregimpl1_regs1 <= builder_multiregimpl1_regs0;
	builder_multiregimpl2_regs0 <= {user_btn0};
	builder_multiregimpl2_regs1 <= builder_multiregimpl2_regs0;
end


//------------------------------------------------------------------------------
// Specialized Logic
//------------------------------------------------------------------------------

//------------------------------------------------------------------------------
// Memory mem: 50-words x 8-bit
//------------------------------------------------------------------------------
// Port 0 | Read: Sync  | Write: ---- | 
reg [7:0] mem[0:49];
initial begin
	$readmemh("mem.init", mem);
end
reg [5:0] mem_adr0;
always @(posedge sys_clk) begin
	mem_adr0 <= builder_basesoc_csr_bankarray_adr;
end
assign builder_basesoc_csr_bankarray_dat_r = mem[mem_adr0];


endmodule

// -----------------------------------------------------------------------------
//  Auto-Generated by LiteX on 2022-03-15 18:37:21.
//------------------------------------------------------------------------------
